{"version":3,"sources":["metronome/core.cljs"],"mappings":"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","names":["p__29317","map__29318","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","metronome.core/on-row-click","seconds","timer-fn","running","cadence","bg-opacity","cljs.core/deref","js/clearInterval","cljs.core/reset!","js/setInterval","cljs.core._EQ_","cljs.core.swap_BANG_","cljs.core/inc","js/window.speechSynthesis.speak","js/SpeechSynthesisUtterance","cljs.core/not","p__29320","map__29321","metronome.core/counter-row","desc","bg-color","with-let29323","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__28532__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init29324","res__28533__auto__","destroy__28531__auto__","reagent.ratom/reactive?","seconds-elapsed","reagent.core.atom","cljs.core.atom","metronome.core/home-page","metronome.core/mount-root","reagent.dom.render","js/document","metronome.core/init!"],"sourcesContent":["(ns metronome.core\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as d]\n    ))\n\n\n\n(defn on-row-click [{seconds :seconds timer-fn :timer-fn running :running cadence :cadence bg-opacity :bg-opacity}]\n      (fn []\n          (if @running (do (js/clearInterval @timer-fn) (reset! seconds 0))\n                       (reset! timer-fn (js/setInterval\n                                          #(do\n                                             (if (= @seconds cadence)\n                                               (reset! seconds 1)\n                                               (do (reset! bg-opacity \"bg-opacity-75\")\n                                                   (swap! seconds inc)))\n                                             (js/window.speechSynthesis.speak (js/SpeechSynthesisUtterance. @seconds))) 1000)))\n          (reset! running (not @running))\n          ))\n\n(defn counter-row [{desc :desc bg-color :bg-color cadence :cadence}]\n      (r/with-let [seconds-elapsed (r/atom 0)\n                   running (r/atom false)\n                   timer-fn (atom nil)\n                   bg-opacity (atom \"bg-opacity-75\")]\n                  (fn []\n                      [:div {:class    (str \"h-full flex flex-col flex-1 \" bg-color \" \" @bg-opacity \" items-center justify-evenly\")\n                             :on-click (on-row-click {:seconds    seconds-elapsed\n                                                      :timer-fn   timer-fn\n                                                      :running    running\n                                                      :cadence    cadence\n                                                      :bg-opacity bg-opacity})}\n                       [:p {:class \"w-full text-9xl text-center text-gray-50 font-mono font-bold\"} desc]\n                       [:p {:class \"w-full text-9xl text-center text-gray-50 font-mono font-bold\"} @seconds-elapsed]])\n                  (finally (js/clearInterval timer-fn))))\n\n(defn home-page []\n      [:div {:class \"w-screen h-screen flex flex-col\"}\n       [counter-row {:desc \"2U2D\" :bg-color \"bg-purple-600\" :cadence 4}]\n       [counter-row {:desc \"3U3D\" :bg-color \"bg-red-600\" :cadence 6}]])\n\n\n\n;(defn home-page []\n;      [:div\n;       [{:class \"h-full\"}]\n;       [{:class \"h-full\"}]\n;       [{:class \"h-full\"}]])\n;; -------------------------\n;; Initialize app\n\n(defn mount-root []\n      (d/render [home-page] (.getElementById js/document \"app\")))\n\n(defn ^:export init! []\n      (mount-root))\n"]}