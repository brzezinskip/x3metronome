["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.templating');\ndevtools.formatters.templating.mark_as_group_BANG_ = (function devtools$formatters$templating$mark_as_group_BANG_(value){\nvar x30613_30762 = value;\n(x30613_30762.devtools$protocols$IGroup$ = cljs.core.PROTOCOL_SENTINEL);\n\n\nreturn value;\n});\ndevtools.formatters.templating.group_QMARK_ = (function devtools$formatters$templating$group_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$IGroup$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n}\n});\ndevtools.formatters.templating.mark_as_template_BANG_ = (function devtools$formatters$templating$mark_as_template_BANG_(value){\nvar x30618_30766 = value;\n(x30618_30766.devtools$protocols$ITemplate$ = cljs.core.PROTOCOL_SENTINEL);\n\n\nreturn value;\n});\ndevtools.formatters.templating.template_QMARK_ = (function devtools$formatters$templating$template_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ITemplate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n}\n});\ndevtools.formatters.templating.mark_as_surrogate_BANG_ = (function devtools$formatters$templating$mark_as_surrogate_BANG_(value){\nvar x30625_30767 = value;\n(x30625_30767.devtools$protocols$ISurrogate$ = cljs.core.PROTOCOL_SENTINEL);\n\n\nreturn value;\n});\ndevtools.formatters.templating.surrogate_QMARK_ = (function devtools$formatters$templating$surrogate_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ISurrogate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n}\n});\ndevtools.formatters.templating.reference_QMARK_ = (function devtools$formatters$templating$reference_QMARK_(value){\nreturn ((devtools.formatters.templating.group_QMARK_(value)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((value[(0)]),\"object\")));\n});\ndevtools.formatters.templating.make_group = (function devtools$formatters$templating$make_group(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___30768 = arguments.length;\nvar i__4737__auto___30769 = (0);\nwhile(true){\nif((i__4737__auto___30769 < len__4736__auto___30768)){\nargs__4742__auto__.push((arguments[i__4737__auto___30769]));\n\nvar G__30770 = (i__4737__auto___30769 + (1));\ni__4737__auto___30769 = G__30770;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((0) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);\n});\n\n(devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic = (function (items){\nvar group = devtools.formatters.templating.mark_as_group_BANG_([]);\nvar seq__30643_30771 = cljs.core.seq(items);\nvar chunk__30644_30772 = null;\nvar count__30645_30773 = (0);\nvar i__30646_30774 = (0);\nwhile(true){\nif((i__30646_30774 < count__30645_30773)){\nvar item_30775 = chunk__30644_30772.cljs$core$IIndexed$_nth$arity$2(null,i__30646_30774);\nif((!((item_30775 == null)))){\nif(cljs.core.coll_QMARK_(item_30775)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_30775)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_30775));\n}\n} else {\n}\n\n\nvar G__30777 = seq__30643_30771;\nvar G__30778 = chunk__30644_30772;\nvar G__30779 = count__30645_30773;\nvar G__30780 = (i__30646_30774 + (1));\nseq__30643_30771 = G__30777;\nchunk__30644_30772 = G__30778;\ncount__30645_30773 = G__30779;\ni__30646_30774 = G__30780;\ncontinue;\n} else {\nvar temp__5735__auto___30781 = cljs.core.seq(seq__30643_30771);\nif(temp__5735__auto___30781){\nvar seq__30643_30782__$1 = temp__5735__auto___30781;\nif(cljs.core.chunked_seq_QMARK_(seq__30643_30782__$1)){\nvar c__4556__auto___30783 = cljs.core.chunk_first(seq__30643_30782__$1);\nvar G__30784 = cljs.core.chunk_rest(seq__30643_30782__$1);\nvar G__30785 = c__4556__auto___30783;\nvar G__30786 = cljs.core.count(c__4556__auto___30783);\nvar G__30787 = (0);\nseq__30643_30771 = G__30784;\nchunk__30644_30772 = G__30785;\ncount__30645_30773 = G__30786;\ni__30646_30774 = G__30787;\ncontinue;\n} else {\nvar item_30788 = cljs.core.first(seq__30643_30782__$1);\nif((!((item_30788 == null)))){\nif(cljs.core.coll_QMARK_(item_30788)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_30788)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_30788));\n}\n} else {\n}\n\n\nvar G__30789 = cljs.core.next(seq__30643_30782__$1);\nvar G__30790 = null;\nvar G__30791 = (0);\nvar G__30792 = (0);\nseq__30643_30771 = G__30789;\nchunk__30644_30772 = G__30790;\ncount__30645_30773 = G__30791;\ni__30646_30774 = G__30792;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn group;\n}));\n\n(devtools.formatters.templating.make_group.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.templating.make_group.cljs$lang$applyTo = (function (seq30634){\nvar self__4724__auto__ = this;\nreturn self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30634));\n}));\n\ndevtools.formatters.templating.make_template = (function devtools$formatters$templating$make_template(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___30796 = arguments.length;\nvar i__4737__auto___30798 = (0);\nwhile(true){\nif((i__4737__auto___30798 < len__4736__auto___30796)){\nargs__4742__auto__.push((arguments[i__4737__auto___30798]));\n\nvar G__30799 = (i__4737__auto___30798 + (1));\ni__4737__auto___30798 = G__30799;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic = (function (tag,style,children){\nvar tag__$1 = devtools.formatters.helpers.pref(tag);\nvar style__$1 = devtools.formatters.helpers.pref(style);\nvar template = devtools.formatters.templating.mark_as_template_BANG_([tag__$1,((cljs.core.empty_QMARK_(style__$1))?({}):({\"style\": style__$1}))]);\nvar seq__30678_30806 = cljs.core.seq(children);\nvar chunk__30679_30807 = null;\nvar count__30680_30808 = (0);\nvar i__30681_30809 = (0);\nwhile(true){\nif((i__30681_30809 < count__30680_30808)){\nvar child_30810 = chunk__30679_30807.cljs$core$IIndexed$_nth$arity$2(null,i__30681_30809);\nif((!((child_30810 == null)))){\nif(cljs.core.coll_QMARK_(child_30810)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_30810))));\n} else {\nvar temp__5733__auto___30816 = devtools.formatters.helpers.pref(child_30810);\nif(cljs.core.truth_(temp__5733__auto___30816)){\nvar child_value_30817 = temp__5733__auto___30816;\ntemplate.push(child_value_30817);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__30818 = seq__30678_30806;\nvar G__30819 = chunk__30679_30807;\nvar G__30820 = count__30680_30808;\nvar G__30821 = (i__30681_30809 + (1));\nseq__30678_30806 = G__30818;\nchunk__30679_30807 = G__30819;\ncount__30680_30808 = G__30820;\ni__30681_30809 = G__30821;\ncontinue;\n} else {\nvar temp__5735__auto___30822 = cljs.core.seq(seq__30678_30806);\nif(temp__5735__auto___30822){\nvar seq__30678_30824__$1 = temp__5735__auto___30822;\nif(cljs.core.chunked_seq_QMARK_(seq__30678_30824__$1)){\nvar c__4556__auto___30825 = cljs.core.chunk_first(seq__30678_30824__$1);\nvar G__30826 = cljs.core.chunk_rest(seq__30678_30824__$1);\nvar G__30827 = c__4556__auto___30825;\nvar G__30828 = cljs.core.count(c__4556__auto___30825);\nvar G__30829 = (0);\nseq__30678_30806 = G__30826;\nchunk__30679_30807 = G__30827;\ncount__30680_30808 = G__30828;\ni__30681_30809 = G__30829;\ncontinue;\n} else {\nvar child_30831 = cljs.core.first(seq__30678_30824__$1);\nif((!((child_30831 == null)))){\nif(cljs.core.coll_QMARK_(child_30831)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_30831))));\n} else {\nvar temp__5733__auto___30834 = devtools.formatters.helpers.pref(child_30831);\nif(cljs.core.truth_(temp__5733__auto___30834)){\nvar child_value_30836 = temp__5733__auto___30834;\ntemplate.push(child_value_30836);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__30837 = cljs.core.next(seq__30678_30824__$1);\nvar G__30838 = null;\nvar G__30839 = (0);\nvar G__30840 = (0);\nseq__30678_30806 = G__30837;\nchunk__30679_30807 = G__30838;\ncount__30680_30808 = G__30839;\ni__30681_30809 = G__30840;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn template;\n}));\n\n(devtools.formatters.templating.make_template.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.templating.make_template.cljs$lang$applyTo = (function (seq30672){\nvar G__30673 = cljs.core.first(seq30672);\nvar seq30672__$1 = cljs.core.next(seq30672);\nvar G__30674 = cljs.core.first(seq30672__$1);\nvar seq30672__$2 = cljs.core.next(seq30672__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30673,G__30674,seq30672__$2);\n}));\n\ndevtools.formatters.templating.concat_templates_BANG_ = (function devtools$formatters$templating$concat_templates_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___30847 = arguments.length;\nvar i__4737__auto___30848 = (0);\nwhile(true){\nif((i__4737__auto___30848 < len__4736__auto___30847)){\nargs__4742__auto__.push((arguments[i__4737__auto___30848]));\n\nvar G__30851 = (i__4737__auto___30848 + (1));\ni__4737__auto___30848 = G__30851;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,templates){\nreturn devtools.formatters.templating.mark_as_template_BANG_((template[\"concat\"]).apply(template,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.into_array,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,templates)))));\n}));\n\n(devtools.formatters.templating.concat_templates_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.templating.concat_templates_BANG_.cljs$lang$applyTo = (function (seq30688){\nvar G__30689 = cljs.core.first(seq30688);\nvar seq30688__$1 = cljs.core.next(seq30688);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30689,seq30688__$1);\n}));\n\ndevtools.formatters.templating.extend_template_BANG_ = (function devtools$formatters$templating$extend_template_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___30856 = arguments.length;\nvar i__4737__auto___30857 = (0);\nwhile(true){\nif((i__4737__auto___30857 < len__4736__auto___30856)){\nargs__4742__auto__.push((arguments[i__4737__auto___30857]));\n\nvar G__30859 = (i__4737__auto___30857 + (1));\ni__4737__auto___30857 = G__30859;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,args){\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic(template,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n}));\n\n(devtools.formatters.templating.extend_template_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.templating.extend_template_BANG_.cljs$lang$applyTo = (function (seq30691){\nvar G__30692 = cljs.core.first(seq30691);\nvar seq30691__$1 = cljs.core.next(seq30691);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30692,seq30691__$1);\n}));\n\ndevtools.formatters.templating.make_surrogate = (function devtools$formatters$templating$make_surrogate(var_args){\nvar G__30703 = arguments.length;\nswitch (G__30703) {\ncase 1:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1 = (function (object){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2(object,null);\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2 = (function (object,header){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3(object,header,null);\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3 = (function (object,header,body){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4(object,header,body,(0));\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4 = (function (object,header,body,start_index){\nreturn devtools.formatters.templating.mark_as_surrogate_BANG_((function (){var obj30705 = ({\"target\":object,\"header\":header,\"body\":body,\"startIndex\":(function (){var or__4126__auto__ = start_index;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn (0);\n}\n})()});\nreturn obj30705;\n})());\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$lang$maxFixedArity = 4);\n\ndevtools.formatters.templating.get_surrogate_target = (function devtools$formatters$templating$get_surrogate_target(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"target\"]);\n});\ndevtools.formatters.templating.get_surrogate_header = (function devtools$formatters$templating$get_surrogate_header(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"header\"]);\n});\ndevtools.formatters.templating.get_surrogate_body = (function devtools$formatters$templating$get_surrogate_body(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"body\"]);\n});\ndevtools.formatters.templating.get_surrogate_start_index = (function devtools$formatters$templating$get_surrogate_start_index(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"startIndex\"]);\n});\ndevtools.formatters.templating.make_reference = (function devtools$formatters$templating$make_reference(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___30894 = arguments.length;\nvar i__4737__auto___30895 = (0);\nwhile(true){\nif((i__4737__auto___30895 < len__4736__auto___30894)){\nargs__4742__auto__.push((arguments[i__4737__auto___30895]));\n\nvar G__30896 = (i__4737__auto___30895 + (1));\ni__4737__auto___30895 = G__30896;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(devtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic = (function (object,p__30715){\nvar vec__30716 = p__30715;\nvar state_override_fn = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30716,(0),null);\nif((((state_override_fn == null)) || (cljs.core.fn_QMARK_(state_override_fn)))){\n} else {\nthrow (new Error(\"Assert failed: (or (nil? state-override-fn) (fn? state-override-fn))\"));\n}\n\nif((object == null)){\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.Keyword(null,\"nil-style\",\"nil-style\",-1505044832),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], 0));\n} else {\nvar sub_state = (((!((state_override_fn == null))))?(function (){var G__30719 = devtools.formatters.state.get_current_state();\nreturn (state_override_fn.cljs$core$IFn$_invoke$arity$1 ? state_override_fn.cljs$core$IFn$_invoke$arity$1(G__30719) : state_override_fn.call(null,G__30719));\n})():devtools.formatters.state.get_current_state());\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"object\",({\"object\": object, \"config\": sub_state})], 0));\n}\n}));\n\n(devtools.formatters.templating.make_reference.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.templating.make_reference.cljs$lang$applyTo = (function (seq30711){\nvar G__30712 = cljs.core.first(seq30711);\nvar seq30711__$1 = cljs.core.next(seq30711);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30712,seq30711__$1);\n}));\n\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating.print_preview = (function devtools$formatters$templating$print_preview(markup){\nvar _STAR_print_level_STAR__orig_val__30725 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__30726 = (1);\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__30726);\n\ntry{return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([markup], 0));\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__30725);\n}});\ndevtools.formatters.templating.add_stack_separators = (function devtools$formatters$templating$add_stack_separators(stack){\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\"-------------\",stack);\n});\ndevtools.formatters.templating.replace_fns_with_markers = (function devtools$formatters$templating$replace_fns_with_markers(stack){\nvar f = (function (v){\nif(cljs.core.fn_QMARK_(v)){\nreturn \"##fn##\";\n} else {\nreturn v;\n}\n});\nreturn clojure.walk.prewalk(f,stack);\n});\ndevtools.formatters.templating.pprint_render_calls = (function devtools$formatters$templating$pprint_render_calls(stack){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.util.pprint_str,stack);\n});\ndevtools.formatters.templating.pprint_render_stack = (function devtools$formatters$templating$pprint_render_stack(stack){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",devtools.formatters.templating.add_stack_separators(devtools.formatters.templating.pprint_render_calls(devtools.formatters.templating.replace_fns_with_markers(cljs.core.reverse(stack)))));\n});\ndevtools.formatters.templating.pprint_render_path = (function devtools$formatters$templating$pprint_render_path(path){\nreturn devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0));\n});\ndevtools.formatters.templating.assert_markup_error = (function devtools$formatters$templating$assert_markup_error(msg){\nthrow (new Error([\"Assert failed: \",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"\\n\",\"Render path: \",devtools.formatters.templating.pprint_render_path(devtools.formatters.templating._STAR_current_render_path_STAR_),\"\\n\",\"Render stack:\\n\",devtools.formatters.templating.pprint_render_stack(devtools.formatters.templating._STAR_current_render_stack_STAR_)].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.surrogate_markup_QMARK_ = (function devtools$formatters$templating$surrogate_markup_QMARK_(markup){\nreturn ((cljs.core.sequential_QMARK_(markup)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(markup),\"surrogate\")));\n});\ndevtools.formatters.templating.render_special = (function devtools$formatters$templating$render_special(name,args){\nvar G__30729 = name;\nswitch (G__30729) {\ncase \"surrogate\":\nvar obj = cljs.core.first(args);\nvar converted_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.rest(args));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_surrogate,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj], null),converted_args));\n\nbreak;\ncase \"reference\":\nvar obj = cljs.core.first(args);\nvar converted_obj = ((devtools.formatters.templating.surrogate_markup_QMARK_(obj))?(devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1 ? devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1(obj) : devtools.formatters.templating.render_json_ml_STAR_.call(null,obj)):obj);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_reference,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [converted_obj], null),cljs.core.rest(args)));\n\nbreak;\ndefault:\nreturn devtools.formatters.templating.assert_markup_error([\"no matching special tag name: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\"'\"].join(''));\n\n}\n});\ndevtools.formatters.templating.emptyish_QMARK_ = (function devtools$formatters$templating$emptyish_QMARK_(v){\nif(((cljs.core.seqable_QMARK_(v)) || (cljs.core.array_QMARK_(v)) || (typeof v === 'string'))){\nreturn cljs.core.empty_QMARK_(v);\n} else {\nreturn false;\n}\n});\ndevtools.formatters.templating.render_subtree = (function devtools$formatters$templating$render_subtree(tag,children){\nvar vec__30735 = tag;\nvar html_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30735,(0),null);\nvar style = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30735,(1),null);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.templating.make_template,html_tag,style,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.emptyish_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,children))));\n});\ndevtools.formatters.templating.render_json_ml_STAR_ = (function devtools$formatters$templating$render_json_ml_STAR_(markup){\nif((!(cljs.core.sequential_QMARK_(markup)))){\nreturn markup;\n} else {\nvar _STAR_current_render_path_STAR__orig_val__30739 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_path_STAR__temp_val__30740 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,cljs.core.first(markup));\n(devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__30740);\n\ntry{var tag = devtools.formatters.helpers.pref(cljs.core.first(markup));\nif(typeof tag === 'string'){\nreturn devtools.formatters.templating.render_special(tag,cljs.core.rest(markup));\n} else {\nif(cljs.core.sequential_QMARK_(tag)){\nreturn devtools.formatters.templating.render_subtree(tag,cljs.core.rest(markup));\n} else {\nreturn devtools.formatters.templating.assert_markup_error([\"invalid json-ml markup at \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.print_preview(markup)),\":\"].join(''));\n\n}\n}\n}finally {(devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__30739);\n}}\n});\ndevtools.formatters.templating.render_json_ml = (function devtools$formatters$templating$render_json_ml(markup){\nvar _STAR_current_render_stack_STAR__orig_val__30745 = devtools.formatters.templating._STAR_current_render_stack_STAR_;\nvar _STAR_current_render_path_STAR__orig_val__30746 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_stack_STAR__temp_val__30747 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_stack_STAR_,markup);\nvar _STAR_current_render_path_STAR__temp_val__30748 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,\"<render-json-ml>\");\n(devtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__temp_val__30747);\n\n(devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__30748);\n\ntry{return devtools.formatters.templating.render_json_ml_STAR_(markup);\n}finally {(devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__30746);\n\n(devtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__orig_val__30745);\n}});\ndevtools.formatters.templating.assert_failed_markup_rendering = (function devtools$formatters$templating$assert_failed_markup_rendering(initial_value,value){\nthrow (new Error([\"Assert failed: \",[\"result of markup rendering must be a template,\\n\",\"resolved to \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),\"initial value: \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([initial_value], 0))].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.render_markup_STAR_ = (function devtools$formatters$templating$render_markup_STAR_(initial_value,value){\nwhile(true){\nif(cljs.core.fn_QMARK_(value)){\nvar G__30943 = initial_value;\nvar G__30944 = (value.cljs$core$IFn$_invoke$arity$0 ? value.cljs$core$IFn$_invoke$arity$0() : value.call(null));\ninitial_value = G__30943;\nvalue = G__30944;\ncontinue;\n} else {\nif((value instanceof cljs.core.Keyword)){\nvar G__30945 = initial_value;\nvar G__30946 = devtools.formatters.helpers.pref(value);\ninitial_value = G__30945;\nvalue = G__30946;\ncontinue;\n} else {\nif(cljs.core.sequential_QMARK_(value)){\nvar G__30947 = initial_value;\nvar G__30948 = devtools.formatters.templating.render_json_ml(value);\ninitial_value = G__30947;\nvalue = G__30948;\ncontinue;\n} else {\nif(devtools.formatters.templating.template_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.surrogate_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.reference_QMARK_(value)){\nreturn value;\n} else {\nreturn devtools.formatters.templating.assert_failed_markup_rendering.call(null,initial_value,value);\n\n}\n}\n}\n}\n}\n}\nbreak;\n}\n});\ndevtools.formatters.templating.render_markup = (function devtools$formatters$templating$render_markup(value){\nreturn devtools.formatters.templating.render_markup_STAR_(value,value);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/templating.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",35],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$oget","~$devtools.oops","~$oset","^H","~$ocall","^H","~$oapply","^H","~$safe-call","^H","~$unchecked-aget","^H"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.templating","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^V","~$devtools.formatters.state","^W","~$devtools.util","^X","~$cljs.core","^Y","~$goog","^Z","~$devtools.protocols","^[","~$string","~$clojure.string","^11","^11","~$clojure.walk","^12"],"~:seen",["^O",["~:require","~:require-macros"]],"~:uses",["^ ","~$prevent-recursion?","^W","~$IGroup","^[","~$ITemplate","^[","~$get-current-state","^W","~$ISurrogate","^[","~$pref","^V","~$prewalk","^12","~$IFormat","^[","~$pprint-str","^X","~$cljs-value?","^V"],"^15",["^ ","^H","^H","^Y","^Y"],"~:form",["~#list",["~$ns","^Q",["^1B",["^15",["^H","~:refer",["^G","^I","^J","^K","^L","^M"]]]],["^1B",["^14",["^12","^1D",["^1="]],["^X","^1D",["^1?"]],["^[","^1D",["^19","^18","^1;","^1>"]],["^V","^1D",["^1<","^1@"]],["^W","^1D",["^1:","^17"]],["^11","~:as","^10"]]]]],"~:flags",["^ ","^15",["^O",[]],"^14",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^Y","^12","^X","^[","^V","^W","^11"]],"^S","^Q","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/templating.cljs"],"~:compiled-at",1611523189239,"~:resource-name","devtools/formatters/templating.cljs","~:warnings",[],"~:source","(ns devtools.formatters.templating\n  (:require-macros [devtools.oops :refer [oget oset ocall oapply safe-call unchecked-aget]])\n  (:require [clojure.walk :refer [prewalk]]\n            [devtools.util :refer [pprint-str]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.helpers :refer [pref cljs-value?]]\n            [devtools.formatters.state :refer [get-current-state prevent-recursion?]]\n            [clojure.string :as string]))\n\n; -- object marking support -------------------------------------------------------------------------------------------------\n\n(defn mark-as-group! [value]\n  (specify! value IGroup)\n  value)\n\n(defn group? [value]\n  (satisfies? IGroup value))\n\n(defn mark-as-template! [value]\n  (specify! value ITemplate)\n  value)\n\n(defn template? [value]\n  (satisfies? ITemplate value))\n\n(defn mark-as-surrogate! [value]\n  (specify! value ISurrogate)\n  value)\n\n(defn surrogate? [value]\n  (satisfies? ISurrogate value))\n\n(defn reference? [value]\n  (and (group? value)\n       (= (unchecked-aget value 0) \"object\")))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn make-group [& items]\n  (let [group (mark-as-group! #js [])]\n    (doseq [item items]\n      (if (some? item)\n        (if (coll? item)\n          (.apply (unchecked-aget group \"push\") group (mark-as-group! (into-array item)))                                               ; convenience helper to splat cljs collections\n          (.push group (pref item)))))\n    group))\n\n(defn make-template\n  [tag style & children]\n  (let [tag (pref tag)\n        style (pref style)\n        template (mark-as-template! #js [tag (if (empty? style)\n                                               #js {}\n                                               #js {\"style\" style})])]\n    (doseq [child children]\n      (if (some? child)\n        (if (coll? child)\n          (.apply (unchecked-aget template \"push\") template (mark-as-template! (into-array (keep pref child))))                         ; convenience helper to splat cljs collections\n          (if-let [child-value (pref child)]\n            (.push template child-value)))))\n    template))\n\n(defn concat-templates! [template & templates]\n  (mark-as-template! (.apply (oget template \"concat\") template (into-array (map into-array (keep pref templates))))))\n\n(defn extend-template! [template & args]\n  (concat-templates! template args))\n\n(defn make-surrogate\n  ; passing :target as body means that targt object body should be rendered using standard templates\n  ; see <surrogate-body> in markup.cljs\n  ([object] (make-surrogate object nil))\n  ([object header] (make-surrogate object header nil))\n  ([object header body] (make-surrogate object header body 0))\n  ([object header body start-index]\n   (mark-as-surrogate! (js-obj\n                         \"target\" object\n                         \"header\" header\n                         \"body\" body\n                         \"startIndex\" (or start-index 0)))))\n\n(defn get-surrogate-target [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"target\"))\n\n(defn get-surrogate-header [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"header\"))\n\n(defn get-surrogate-body [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"body\"))\n\n(defn get-surrogate-start-index [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"startIndex\"))\n\n(defn make-reference [object & [state-override-fn]]\n  {:pre [(or (nil? state-override-fn) (fn? state-override-fn))]}\n  (if (nil? object)\n    ; this code is duplicated in markup.cljs <nil>\n    (make-template :span :nil-style :nil-label)\n    (let [sub-state (if (some? state-override-fn)\n                      (state-override-fn (get-current-state))\n                      (get-current-state))]\n      (make-group \"object\" #js {\"object\" object\n                                \"config\" sub-state}))))\n\n; -- JSON ML support --------------------------------------------------------------------------------------------------------\n\n; a renderer from hiccup-like data markup to json-ml\n;\n; [[tag style] child1 child2 ...] -> #js [tag #js {\"style\" ...} child1 child2 ...]\n;\n\n(declare render-json-ml*)\n\n(def ^:dynamic *current-render-stack* [])\n(def ^:dynamic *current-render-path* [])\n\n(defn print-preview [markup]\n  (binding [*print-level* 1]\n    (pr-str markup)))\n\n(defn add-stack-separators [stack]\n  (interpose \"-------------\" stack))\n\n(defn replace-fns-with-markers [stack]\n  (let [f (fn [v]\n            (if (fn? v)\n              \"##fn##\"\n              v))]\n    (prewalk f stack)))\n\n(defn pprint-render-calls [stack]\n  (map pprint-str stack))\n\n(defn pprint-render-stack [stack]\n  (string/join \"\\n\" (-> stack\n                        reverse\n                        replace-fns-with-markers\n                        pprint-render-calls\n                        add-stack-separators)))\n\n(defn pprint-render-path [path]\n  (pprint-str path))\n\n(defn assert-markup-error [msg]\n  (assert false (str msg \"\\n\"\n                     \"Render path: \" (pprint-render-path *current-render-path*) \"\\n\"\n                     \"Render stack:\\n\"\n                     (pprint-render-stack *current-render-stack*))))\n\n(defn surrogate-markup? [markup]\n  (and (sequential? markup) (= (first markup) \"surrogate\")))\n\n(defn render-special [name args]\n  (case name\n    \"surrogate\" (let [obj (first args)\n                      converted-args (map render-json-ml* (rest args))]\n                  (apply make-surrogate (concat [obj] converted-args)))\n    \"reference\" (let [obj (first args)\n                      converted-obj (if (surrogate-markup? obj) (render-json-ml* obj) obj)]\n                  (apply make-reference (concat [converted-obj] (rest args))))\n    (assert-markup-error (str \"no matching special tag name: '\" name \"'\"))))\n\n(defn emptyish? [v]\n  (if (or (seqable? v) (array? v) (string? v))\n    (empty? v)\n    false))\n\n(defn render-subtree [tag children]\n  (let [[html-tag style] tag]\n    (apply make-template html-tag style (map render-json-ml* (remove emptyish? (map pref children))))))\n\n(defn render-json-ml* [markup]\n  (if-not (sequential? markup)\n    markup\n    (binding [*current-render-path* (conj *current-render-path* (first markup))]\n      (let [tag (pref (first markup))]\n        (cond\n          (string? tag) (render-special tag (rest markup))\n          (sequential? tag) (render-subtree tag (rest markup))\n          :else (assert-markup-error (str \"invalid json-ml markup at \" (print-preview markup) \":\")))))))\n\n(defn render-json-ml [markup]\n  (binding [*current-render-stack* (conj *current-render-stack* markup)\n            *current-render-path* (conj *current-render-path* \"<render-json-ml>\")]\n    (render-json-ml* markup)))\n\n; -- template rendering -----------------------------------------------------------------------------------------------------\n\n(defn ^:dynamic assert-failed-markup-rendering [initial-value value]\n  (assert false (str \"result of markup rendering must be a template,\\n\"\n                     \"resolved to \" (pprint-str value)\n                     \"initial value: \" (pprint-str initial-value))))\n\n(defn render-markup* [initial-value value]\n  (cond\n    (fn? value) (recur initial-value (value))\n    (keyword? value) (recur initial-value (pref value))\n    (sequential? value) (recur initial-value (render-json-ml value))\n    (template? value) value\n    (surrogate? value) value\n    (reference? value) value\n    :else (assert-failed-markup-rendering initial-value value)))\n\n(defn render-markup [value]\n  (render-markup* value value))\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.templating/mark-as-group!","value","x30613","cljs.core/PROTOCOL_SENTINEL","devtools.formatters.templating/group?","cljs.core/native-satisfies?","devtools.protocols/IGroup","devtools.formatters.templating/mark-as-template!","x30618","devtools.formatters.templating/template?","devtools.protocols/ITemplate","devtools.formatters.templating/mark-as-surrogate!","x30625","devtools.formatters.templating/surrogate?","devtools.protocols/ISurrogate","devtools.formatters.templating/reference?","cljs.core._EQ_","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","devtools.formatters.templating/make-group","seq30634","self__4724__auto__","cljs.core/seq","items","group","seq__30643","chunk__30644","count__30645","i__30646","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","item","cljs.core/coll?","cljs.core.into_array","devtools.formatters.helpers/pref","devtools.formatters.templating/make-template","seq30672","G__30673","G__30674","self__4723__auto__","tag","style","children","template","cljs.core/empty?","seq__30678","chunk__30679","count__30680","i__30681","child","cljs.core.keep","temp__5733__auto__","child-value","devtools.formatters.templating/concat-templates!","seq30688","G__30689","templates","cljs.core.map","cljs.core/into-array","devtools.formatters.templating/extend-template!","seq30691","G__30692","args","devtools.formatters.templating.concat_templates_BANG_","G__30703","devtools.formatters.templating/make-surrogate","js/Error","object","devtools.formatters.templating.make_surrogate","header","body","start-index","obj30705","or__4126__auto__","devtools.formatters.templating/get-surrogate-target","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-body","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.templating/make-reference","p__30715","vec__30716","cljs.core.nth","seq30711","G__30712","state-override-fn","cljs.core/fn?","devtools.formatters.templating.make_template","sub-state","G__30719","devtools.formatters.state/get-current-state","devtools.formatters.templating.make_group","devtools.formatters.templating/*current-render-stack*","devtools.formatters.templating/*current-render-path*","devtools.formatters.templating/print-preview","markup","*print-level*-orig-val__30725","*print-level*-temp-val__30726","cljs.core/*print-level*","cljs.core.pr_str","devtools.formatters.templating/add-stack-separators","stack","cljs.core.interpose","devtools.formatters.templating/replace-fns-with-markers","f","v","clojure.walk/prewalk","devtools.formatters.templating/pprint-render-calls","devtools.util/pprint-str","devtools.formatters.templating/pprint-render-stack","clojure.string.join","cljs.core/reverse","devtools.formatters.templating/pprint-render-path","path","devtools.util.pprint_str","devtools.formatters.templating/assert-markup-error","msg","devtools.formatters.templating/surrogate-markup?","cljs.core/sequential?","devtools.formatters.templating/render-special","name","G__30729","obj","converted-args","devtools.formatters.templating/render-json-ml*","cljs.core/rest","cljs.core.apply","cljs.core.concat","converted-obj","devtools.formatters.templating/emptyish?","cljs.core/seqable?","cljs.core/array?","devtools.formatters.templating/render-subtree","vec__30735","html-tag","cljs.core.remove","*current-render-path*-orig-val__30739","*current-render-path*-temp-val__30740","cljs.core.conj","devtools.formatters.templating/render-json-ml","*current-render-stack*-orig-val__30745","*current-render-path*-orig-val__30746","*current-render-stack*-temp-val__30747","*current-render-path*-temp-val__30748","devtools.formatters.templating/assert-failed-markup-rendering","initial-value","devtools.formatters.templating/render-markup*","cljs.core/Keyword","devtools.formatters.templating/render-markup"]],"~:used-vars",["^O",["~$cljs.core/array?","~$devtools.formatters.templating/render-markup*","~$cljs.core/keep","~$clojure.string/join","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$devtools.formatters.templating/add-stack-separators","~$devtools.formatters.templating/render-json-ml*","~$devtools.formatters.templating/print-preview","~$cljs.core/*print-level*","~$cljs.core/sequential?","~$devtools.formatters.templating/group?","~$devtools.formatters.templating/surrogate?","~$devtools.formatters.templating/extend-template!","~$cljs.core/=","~$cljs.core/into-array","~$clojure.walk/prewalk","~$devtools.formatters.templating/replace-fns-with-markers","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$cljs.core/Keyword","~$devtools.formatters.templating/pprint-render-stack","~$devtools.formatters.templating/get-surrogate-start-index","~$cljs.core/chunk-rest","~$devtools.formatters.templating/render-special","~$cljs.core/concat","~$cljs.core/pr-str","~$cljs.core/native-satisfies?","~$devtools.formatters.templating/assert-failed-markup-rendering","~$cljs.core/empty?","~$devtools.formatters.templating/assert-markup-error","~$devtools.formatters.templating/render-markup","~$devtools.formatters.templating/*current-render-stack*","~$cljs.core/map","~$devtools.formatters.templating/mark-as-group!","~$cljs.core/fn?","~$devtools.formatters.templating/surrogate-markup?","~$devtools.formatters.templating/get-surrogate-target","~$devtools.formatters.templating/mark-as-template!","~$devtools.formatters.templating/template?","~$devtools.protocols/ISurrogate","~$devtools.formatters.templating/render-subtree","~$devtools.formatters.templating/emptyish?","~$devtools.formatters.templating/make-reference","~$cljs.core/remove","~$devtools.formatters.helpers/pref","~$devtools.formatters.templating/make-template","~$devtools.formatters.templating/render-json-ml","~$devtools.formatters.templating/make-surrogate","~$cljs.core/next","~$devtools.protocols/ITemplate","~$devtools.util/pprint-str","~$cljs.core/not","~$devtools.formatters.templating/make-group","~$cljs.core/interpose","~$devtools.formatters.templating/get-surrogate-header","~$devtools.formatters.templating/*current-render-path*","~$cljs.core/reverse","~$cljs.core/seqable?","~$cljs.core/coll?","~$cljs.core/first","~$devtools.formatters.templating/pprint-render-path","~$devtools.formatters.templating/get-surrogate-body","~$devtools.formatters.templating/pprint-render-calls","~$devtools.formatters.templating/reference?","~$js/Error","~$devtools.protocols/IGroup","~$devtools.formatters.templating/mark-as-surrogate!","~$devtools.formatters.templating/concat-templates!","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1J","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^Z","~$goog.dom.HtmlElement"]]],["^1J","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","~$goog.labs.userAgent.util","~$goog.string"]]],["^1J","devtools/formatters/helpers.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","~$devtools.prefs","~$devtools.munging","~$devtools.format","^["]]],["^1J","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","~$goog.array","~$goog.asserts"]]],["^1J","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3L","~$goog.object","~$goog.string.internal"]]],["^1J","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3T"]]],["^1J","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R"]]],["^1J","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^3L","~$goog.reflect","^3M"]]],["^1J","devtools/formatters/templating.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","^12","^X","^[","^V","^W","^11"]]],["^1J","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","cljs/pprint.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","^11","^3M","~$goog.string.StringBuffer"]]],["^1J","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R"]]],"~:SHADOW-TIMESTAMP",[1611523148000,1611523148000,1611523009000],["^1J","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R","^42"]]],["^1J","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R","~$goog.html.trustedtypes","^3W","^3X","^3Y","^3Z"]]],["^1J","devtools/version.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y"]]],["^1J","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3R","~$goog.html.SafeUrl","^3Y","^3Z","^3T"]]],["^1J","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^46","^3V","~$goog.html.uncheckedconversions","^3Y","^3T"]]],["^1J","devtools/prefs.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","~$devtools.defaults"]]],["^1J","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y"]]],["^1J","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1J","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3R","~$goog.dom.TagName","~$goog.dom.tags","^4:","^4;","~$goog.html.SafeStyleSheet","^46","^3V","^45","^3W","^3X","^3[","^3S","^3Y","^3Z","^3T"]]],["^1J","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3S"]]],["^1J","devtools/munging.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","^11","~$devtools.context","^3S","^43"]]],["^1J","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3L","^3M"]]],["^1J","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1J","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3R","^3M","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1J","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",[]]],["^1J","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3S"]]],["^1J","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","^3M","^43"]]],["^1J","devtools/formatters/state.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y"]]],["^1J","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","~$goog.dom.safe","^4<","^3Y","^3T"]]],["^1J","clojure/data.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","~$clojure.set"]]],["^1J","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3T"]]],["^1J","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3R","^48","~$goog.math"]]],["^1J","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R","^49","^4:","^4;","^4B","^46","^3V","^3Y","^3T"]]],["^1J","devtools/defaults.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y"]]],["^1J","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z"]]],["^1J","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","~$goog.math.Long","~$goog.math.Integer","^3M","^3S","^3Q","~$goog.Uri","^43"]]],["^1J","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R","^45","^3Y","^3Z"]]],["^1J","devtools/context.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y"]]],["^1J","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3R","^4;","^3S","^3Y","^3Z","^3T"]]],["^1J","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^42"]]],["^1J","devtools/format.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","^4C"]]],["^1J","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y"]]],["^1J","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3Q","^3R","^3M"]]],["^1J","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^3R","^3Z"]]],["^1J","devtools/protocols.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y"]]],["^1J","devtools/util.cljs"],["894db312e49878f9361ea580dbcda475aaa80093","^3G",["^ ","^3H",null,"^3I",["^O",[]],"^3J",["^Z","^Y","~$goog.userAgent","~$clojure.data","~$devtools.version","^4C","^?","^3N"]]]]],"~:clj-info",["^ ","jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/prefs.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/munging.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/defaults.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/oops.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/version.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/pprint.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/binaryage/devtools/1.0.2/devtools-1.0.2.jar!/devtools/compiler.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1608999849000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",1,"^8",5,"^9",1,"^:",35],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H"],"^N",["^O",[]],"^P","^Q","^T",null,"^U",["^ ","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^[","^10","^11","^11","^11","^12","^12"],"^13",["^O",["^14","^15"]],"~:shadow/js-access-global",["^O",["Error"]],"^16",["^ ","^17","^W","^18","^[","^19","^[","^1:","^W","^1;","^[","^1<","^V","^1=","^12","^1>","^[","^1?","^X","^1@","^V"],"~:defs",["^ ","~$make-template",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",48,"^8",7,"^9",48,"^:",20,"~:arglists",["^1B",["~$quote",["^1B",[["~$tag","~$style","~$&","~$children"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^1B",["^5P","^5Q","^5R"]]],"^5N",["^1B",[["^5P","^5Q","~$&","^5R"]]],"~:arglists-meta",["^1B",[null]]]],"^P","^2Y","^6","devtools/formatters/templating.cljs","^:",20,"^5S",["^ ","^5T",true,"^5U",2,"^5V",2,"^5W",[["^1B",["^5P","^5Q","^5R"]]],"^5N",["^1B",[["^5P","^5Q","~$&","^5R"]]],"^5X",["^1B",[null]]],"^5W",[["^1B",["^5P","^5Q","^5R"]]],"~:protocol-impl",null,"^5U",2,"^5X",["^1B",[null]],"^8",1,"^5T",true,"~:methods",[["^ ","^5U",2,"^5T",true,"~:tag","~$any"]],"^7",48,"~:ret-tag","^60","^9",48,"^5V",2,"~:fn-var",true,"^5N",["^1B",[["^5P","^5Q","~$&","^5R"]]]],"~$mark-as-surrogate!",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",26,"^8",7,"^9",26,"^:",25,"^5N",["^1B",["^5O",["^1B",[["~$value"]]]]]],"^P","^3B","^6","devtools/formatters/templating.cljs","^:",25,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",26,"^9",26,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$concat-templates!",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",63,"^8",7,"^9",63,"^:",24,"^5N",["^1B",["^5O",["^1B",[["~$template","~$&","~$templates"]]]]],"^5S",["^ ","^5T",true,"^5U",1,"^5V",1,"^5W",[["^1B",["^66","^67"]]],"^5N",["^1B",[["^66","~$&","^67"]]],"^5X",["^1B",[null]]]],"^P","^3C","^6","devtools/formatters/templating.cljs","^:",24,"^5S",["^ ","^5T",true,"^5U",1,"^5V",1,"^5W",[["^1B",["^66","^67"]]],"^5N",["^1B",[["^66","~$&","^67"]]],"^5X",["^1B",[null]]],"^5W",[["^1B",["^66","^67"]]],"^5Y",null,"^5U",1,"^5X",["^1B",[null]],"^8",1,"^5T",true,"^5Z",[["^ ","^5U",1,"^5T",true,"^5[","^60"]],"^7",63,"^61","^60","^9",63,"^5V",1,"^62",true,"^5N",["^1B",[["^66","~$&","^67"]]]],"~$make-reference",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",98,"^8",7,"^9",98,"^:",21,"^5N",["^1B",["^5O",["^1B",[["~$object","~$&",["~$state-override-fn"]]]]]],"^5S",["^ ","^5T",true,"^5U",1,"^5V",1,"^5W",[["^1B",["^69",["^6:"]]]],"^5N",["^1B",[["^69","~$&",["^6:"]]]],"^5X",["^1B",[null]]]],"^P","^2V","^6","devtools/formatters/templating.cljs","^:",21,"^5S",["^ ","^5T",true,"^5U",1,"^5V",1,"^5W",[["^1B",["^69",["^6:"]]]],"^5N",["^1B",[["^69","~$&",["^6:"]]]],"^5X",["^1B",[null]]],"^5W",[["^1B",["^69",["^6:"]]]],"^5Y",null,"^5U",1,"^5X",["^1B",[null]],"^8",1,"^5T",true,"^5Z",[["^ ","^5U",1,"^5T",true,"^5[","^60"]],"^7",98,"^61","^60","^9",98,"^5V",1,"^62",true,"^5N",["^1B",[["^69","~$&",["^6:"]]]]],"~$make-surrogate",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",69,"^8",7,"^9",69,"^:",21,"^5N",["^1B",["^5O",["^1B",[["^69"],["^69","~$header"],["^69","^6<","~$body"],["^69","^6<","^6=","~$start-index"]]]]],"^5S",["^ ","^5T",false,"^5U",4,"^5V",4,"^5W",[["^69"],["^69","^6<"],["^69","^6<","^6="],["^69","^6<","^6=","^6>"]],"^5N",["^1B",[["^69"],["^69","^6<"],["^69","^6<","^6="],["^69","^6<","^6=","^6>"]]],"^5X",["^1B",[null,null,null,null]]]],"^P","^2[","^6","devtools/formatters/templating.cljs","^:",21,"^5S",["^ ","^5T",false,"^5U",4,"^5V",4,"^5W",[["^69"],["^69","^6<"],["^69","^6<","^6="],["^69","^6<","^6=","^6>"]],"^5N",["^1B",[["^69"],["^69","^6<"],["^69","^6<","^6="],["^69","^6<","^6=","^6>"]]],"^5X",["^1B",[null,null,null,null]]],"^5W",[["^69"],["^69","^6<"],["^69","^6<","^6="],["^69","^6<","^6=","^6>"]],"^5Y",null,"^5U",4,"^5X",["^1B",[null,null,null,null]],"^8",1,"^5T",false,"^5Z",[["^ ","^5U",1,"^5T",false,"^5[","^60"],["^ ","^5U",2,"^5T",false,"^5[","^60"],["^ ","^5U",3,"^5T",false,"^5[","^60"],["^ ","^5U",4,"^5T",false,"^5[","^60"]],"^7",69,"^9",69,"^5V",4,"^62",true,"^5N",["^1B",[["^69"],["^69","^6<"],["^69","^6<","^6="],["^69","^6<","^6=","^6>"]]]],"~$pprint-render-path",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",145,"^8",7,"^9",145,"^:",25,"^5N",["^1B",["^5O",["^1B",[["~$path"]]]]]],"^P","^3<","^6","devtools/formatters/templating.cljs","^:",25,"^5W",["^1B",[["^6@"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",145,"^61","^10","^9",145,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6@"]]]]]],"~$get-surrogate-body",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",90,"^8",7,"^9",90,"^:",25,"^5N",["^1B",["^5O",["^1B",[["~$surrogate"]]]]]],"^P","^3=","^6","devtools/formatters/templating.cljs","^:",25,"^5W",["^1B",[["^6B"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",90,"^61","^60","^9",90,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6B"]]]]]],"~$reference?",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",33,"^8",7,"^9",33,"^:",17,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"^P","^3?","^6","devtools/formatters/templating.cljs","^:",17,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",33,"^61","~$boolean","^9",33,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$replace-fns-with-markers",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",128,"^8",7,"^9",128,"^:",31,"^5N",["^1B",["^5O",["^1B",[["~$stack"]]]]]],"^P","^2;","^6","devtools/formatters/templating.cljs","^:",31,"^5W",["^1B",[["^6F"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",128,"^61","^60","^9",128,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6F"]]]]]],"~$*current-render-path*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",119,"^8",16,"^9",119,"^:",37,"~:dynamic",true],"^P","^37","^6","devtools/formatters/templating.cljs","^:",37,"^8",1,"^6H",true,"^7",119,"^9",119,"^5[","^60"],"~$render-subtree",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",172,"^8",7,"^9",172,"^:",21,"^5N",["^1B",["^5O",["^1B",[["^5P","^5R"]]]]]],"^P","^2T","^6","devtools/formatters/templating.cljs","^:",21,"^5W",["^1B",[["^5P","^5R"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",172,"^61","^60","^9",172,"^5V",2,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^5P","^5R"]]]]]],"~$emptyish?",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",167,"^8",7,"^9",167,"^:",16,"^5N",["^1B",["^5O",["^1B",[["~$v"]]]]]],"^P","^2U","^6","devtools/formatters/templating.cljs","^:",16,"^5W",["^1B",[["~$v"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",167,"^61","^6D","^9",167,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["~$v"]]]]]],"~$assert-failed-markup-rendering",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",193,"^8",17,"^9",193,"^:",47,"^6H",true,"^5N",["^1B",["^5O",["^1B",[["~$initial-value","^64"]]]]]],"^P","^2G","^6","devtools/formatters/templating.cljs","^:",47,"^5W",["^1B",[["^6L","^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^6H",true,"^7",193,"^61","~$clj-nil","^9",193,"^5V",2,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6L","^64"]]]]]],"~$pprint-render-calls",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",135,"^8",7,"^9",135,"^:",26,"^5N",["^1B",["^5O",["^1B",[["^6F"]]]]]],"^P","^3>","^6","devtools/formatters/templating.cljs","^:",26,"^5W",["^1B",[["^6F"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",135,"^61","~$cljs.core/LazySeq","^9",135,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6F"]]]]]],"~$render-markup",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",208,"^8",7,"^9",208,"^:",20,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"^P","^2J","^6","devtools/formatters/templating.cljs","^:",20,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",208,"^61",["^O",[null,"^6M"]],"^9",208,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$assert-markup-error",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",148,"^8",7,"^9",148,"^:",26,"^5N",["^1B",["^5O",["^1B",[["~$msg"]]]]]],"^P","^2I","^6","devtools/formatters/templating.cljs","^:",26,"^5W",["^1B",[["^6R"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",148,"^61","^6M","^9",148,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6R"]]]]]],"~$surrogate-markup?",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",154,"^8",7,"^9",154,"^:",24,"^5N",["^1B",["^5O",["^1B",[["~$markup"]]]]]],"^P","^2O","^6","devtools/formatters/templating.cljs","^:",24,"^5W",["^1B",[["^6T"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",154,"^61","^6D","^9",154,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6T"]]]]]],"~$render-markup*",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",198,"^8",7,"^9",198,"^:",21,"^5N",["^1B",["^5O",["^1B",[["^6L","^64"]]]]]],"^P","^1W","^6","devtools/formatters/templating.cljs","^:",21,"^5W",["^1B",[["^6L","^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",198,"^61",["^O",[null,"^6M"]],"^9",198,"^5V",2,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6L","^64"]]]]]],"~$add-stack-separators",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",125,"^8",7,"^9",125,"^:",27,"^5N",["^1B",["^5O",["^1B",[["^6F"]]]]]],"^P","^20","^6","devtools/formatters/templating.cljs","^:",27,"^5W",["^1B",[["^6F"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",125,"^61","^6O","^9",125,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6F"]]]]]],"~$make-group",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",39,"^8",7,"^9",39,"^:",17,"^5N",["^1B",["^5O",["^1B",[["~$&","~$items"]]]]],"^5S",["^ ","^5T",true,"^5U",0,"^5V",0,"^5W",[["^1B",["^6X"]]],"^5N",["^1B",[["~$&","^6X"]]],"^5X",["^1B",[null]]]],"^P","^34","^6","devtools/formatters/templating.cljs","^:",17,"^5S",["^ ","^5T",true,"^5U",0,"^5V",0,"^5W",[["^1B",["^6X"]]],"^5N",["^1B",[["~$&","^6X"]]],"^5X",["^1B",[null]]],"^5W",[["^1B",["^6X"]]],"^5Y",null,"^5U",0,"^5X",["^1B",[null]],"^8",1,"^5T",true,"^5Z",[["^ ","^5U",0,"^5T",true,"^5[","^60"]],"^7",39,"^61","^60","^9",39,"^5V",0,"^62",true,"^5N",["^1B",[["~$&","^6X"]]]],"~$get-surrogate-header",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",86,"^8",7,"^9",86,"^:",27,"^5N",["^1B",["^5O",["^1B",[["^6B"]]]]]],"^P","^36","^6","devtools/formatters/templating.cljs","^:",27,"^5W",["^1B",[["^6B"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",86,"^61","^60","^9",86,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6B"]]]]]],"~$render-json-ml*",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",176,"^8",7,"^9",176,"^:",22,"^5N",["^1B",["^5O",["^1B",[["^6T"]]]]]],"^P","^21","^6","devtools/formatters/templating.cljs","^:",22,"^5W",["^1B",[["^6T"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",176,"^9",176,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6T"]]]]]],"~$surrogate?",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",30,"^8",7,"^9",30,"^:",17,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"^P","^26","^6","devtools/formatters/templating.cljs","^:",17,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",30,"^61","^6D","^9",30,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$render-json-ml",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",186,"^8",7,"^9",186,"^:",21,"^5N",["^1B",["^5O",["^1B",[["^6T"]]]]]],"^P","^2Z","^6","devtools/formatters/templating.cljs","^:",21,"^5W",["^1B",[["^6T"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",186,"^9",186,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6T"]]]]]],"~$*current-render-stack*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",118,"^8",16,"^9",118,"^:",38,"^6H",true],"^P","^2K","^6","devtools/formatters/templating.cljs","^:",38,"^8",1,"^6H",true,"^7",118,"^9",118,"^5[","^60"],"~$mark-as-group!",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",12,"^8",7,"^9",12,"^:",21,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"^P","^2M","^6","devtools/formatters/templating.cljs","^:",21,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",12,"^9",12,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$get-surrogate-target",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",82,"^8",7,"^9",82,"^:",27,"^5N",["^1B",["^5O",["^1B",[["^6B"]]]]]],"^P","^2P","^6","devtools/formatters/templating.cljs","^:",27,"^5W",["^1B",[["^6B"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",82,"^61","^60","^9",82,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6B"]]]]]],"~$get-surrogate-start-index",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",94,"^8",7,"^9",94,"^:",32,"^5N",["^1B",["^5O",["^1B",[["^6B"]]]]]],"^P","^2A","^6","devtools/formatters/templating.cljs","^:",32,"^5W",["^1B",[["^6B"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",94,"^61","^60","^9",94,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6B"]]]]]],"~$mark-as-template!",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",19,"^8",7,"^9",19,"^:",24,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"^P","^2Q","^6","devtools/formatters/templating.cljs","^:",24,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",19,"^9",19,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$pprint-render-stack",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",138,"^8",7,"^9",138,"^:",26,"^5N",["^1B",["^5O",["^1B",[["^6F"]]]]]],"^P","^2@","^6","devtools/formatters/templating.cljs","^:",26,"^5W",["^1B",[["^6F"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",138,"^61","^10","^9",138,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6F"]]]]]],"~$template?",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",23,"^8",7,"^9",23,"^:",16,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"^P","^2R","^6","devtools/formatters/templating.cljs","^:",16,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",23,"^61","^6D","^9",23,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$render-special",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",157,"^8",7,"^9",157,"^:",21,"^5N",["^1B",["^5O",["^1B",[["~$name","~$args"]]]]]],"^P","^2C","^6","devtools/formatters/templating.cljs","^:",21,"^5W",["^1B",[["^79","^7:"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",157,"^9",157,"^5V",2,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^79","^7:"]]]]]],"~$print-preview",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",121,"^8",7,"^9",121,"^:",20,"^5N",["^1B",["^5O",["^1B",[["^6T"]]]]]],"^P","^22","^6","devtools/formatters/templating.cljs","^:",20,"^5W",["^1B",[["^6T"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",121,"^9",121,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^6T"]]]]]],"~$group?",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",16,"^8",7,"^9",16,"^:",13,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"^P","^25","^6","devtools/formatters/templating.cljs","^:",13,"^5W",["^1B",[["^64"]]],"^5Y",null,"^5X",["^1B",[null,null]],"^8",1,"^5T",false,"^7",16,"^61","^6D","^9",16,"^5V",1,"^62",true,"^5N",["^1B",["^5O",["^1B",[["^64"]]]]]],"~$extend-template!",["^ ","^5M",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",66,"^8",7,"^9",66,"^:",23,"^5N",["^1B",["^5O",["^1B",[["^66","~$&","^7:"]]]]],"^5S",["^ ","^5T",true,"^5U",1,"^5V",1,"^5W",[["^1B",["^66","^7:"]]],"^5N",["^1B",[["^66","~$&","^7:"]]],"^5X",["^1B",[null]]]],"^P","^27","^6","devtools/formatters/templating.cljs","^:",23,"^5S",["^ ","^5T",true,"^5U",1,"^5V",1,"^5W",[["^1B",["^66","^7:"]]],"^5N",["^1B",[["^66","~$&","^7:"]]],"^5X",["^1B",[null]]],"^5W",[["^1B",["^66","^7:"]]],"^5Y",null,"^5U",1,"^5X",["^1B",[null]],"^8",1,"^5T",true,"^5Z",[["^ ","^5U",1,"^5T",true,"^5[","^60"]],"^7",66,"^61","^60","^9",66,"^5V",1,"^62",true,"^5N",["^1B",[["^66","~$&","^7:"]]]]],"^15",["^ ","^H","^H","^Y","^Y"],"~:cljs.analyzer/constants",["^ ","^13",["^O",["~:nil-style","~:else","~:nil-label","~:span"]],"~:order",["^7B","^7?","^7A","^7@"]],"^1F",["^ ","^15",["^O",[]],"^14",["^O",[]]],"^1G",["^ "],"^1H",["^Z","^Y","^12","^X","^[","^V","^W","^11"]],"^S","^Q","~:ns-specs",["^ "],"~:ns-spec-vars",["^O",[]],"~:compiler-options",["^3F",[["^7F","~:static-fns"],true,["^7F","~:shadow-tweaks"],null,["^7F","~:source-map-inline"],null,["^7F","~:elide-asserts"],false,["^7F","~:optimize-constants"],null,["^7F","^1M"],null,["^7F","~:external-config"],null,["^7F","~:tooling-config"],null,["^7F","~:emit-constants"],null,["^7F","~:load-tests"],null,["^7F","~:form-size-threshold"],null,["^7F","~:data-readers"],null,["^7F","~:infer-externs"],"~:auto",["^7F","^1O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7F","~:fn-invoke-direct"],null,["^7F","~:source-map"],"/dev/null"]]]