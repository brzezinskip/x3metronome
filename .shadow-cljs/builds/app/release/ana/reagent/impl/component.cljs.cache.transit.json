["^ ","~:output",["^ ","~:js","goog.provide('reagent.impl.component');\nreagent.impl.component.extract_props = (function reagent$impl$component$extract_props(v){\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nif(cljs.core.map_QMARK_(p)){\nreturn p;\n} else {\nreturn null;\n}\n});\nreagent.impl.component.extract_children = (function reagent$impl$component$extract_children(v){\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nvar first_child = (((((p == null)) || (cljs.core.map_QMARK_(p))))?(2):(1));\nif((cljs.core.count(v) > first_child)){\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_child);\n} else {\nreturn null;\n}\n});\nreagent.impl.component.props_argv = (function reagent$impl$component$props_argv(c,p){\nvar temp__5737__auto__ = p.argv;\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c.constructor,reagent.impl.util.shallow_obj_to_map(p)], null);\n} else {\nvar a = temp__5737__auto__;\nreturn a;\n}\n});\nreagent.impl.component.get_argv = (function reagent$impl$component$get_argv(c){\nreturn reagent.impl.component.props_argv(c,c.props);\n});\nreagent.impl.component.get_props = (function reagent$impl$component$get_props(c){\nvar p = c.props;\nvar temp__5737__auto__ = p.argv;\nif((temp__5737__auto__ == null)){\nreturn reagent.impl.util.shallow_obj_to_map(p);\n} else {\nvar v = temp__5737__auto__;\nreturn reagent.impl.component.extract_props(v);\n}\n});\nreagent.impl.component.get_children = (function reagent$impl$component$get_children(c){\nvar p = c.props;\nvar temp__5737__auto__ = p.argv;\nif((temp__5737__auto__ == null)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,module$node_modules$react$index.Children.toArray(p.children));\n} else {\nvar v = temp__5737__auto__;\nreturn reagent.impl.component.extract_children(v);\n}\n});\nreagent.impl.component.reagent_class_QMARK_ = (function reagent$impl$component$reagent_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__9425 = c;\nvar G__9425__$1 = (((G__9425 == null))?null:G__9425.prototype);\nif((G__9425__$1 == null)){\nreturn null;\n} else {\nreturn G__9425__$1.reagentRender;\n}\n})() == null)))));\n});\nreagent.impl.component.react_class_QMARK_ = (function reagent$impl$component$react_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) && ((!(((function (){var G__9429 = c;\nvar G__9429__$1 = (((G__9429 == null))?null:G__9429.prototype);\nif((G__9429__$1 == null)){\nreturn null;\n} else {\nreturn G__9429__$1.render;\n}\n})() == null)))));\n});\nreagent.impl.component.reagent_component_QMARK_ = (function reagent$impl$component$reagent_component_QMARK_(c){\nreturn (!((c.reagentRender == null)));\n});\nreagent.impl.component.state_atom = (function reagent$impl$component$state_atom(this$){\nvar sa = this$.cljsState;\nif((!((sa == null)))){\nreturn sa;\n} else {\nreturn (this$.cljsState = reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(null));\n}\n});\n/**\n * Calls the render function of the component `c`.  If result `res` evaluates to a:\n *   1) Vector (form-1 component) - Treats the vector as hiccup and returns\n *      a react element with a render function based on that hiccup\n *   2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n *      and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n *   3) Anything else - Returns the result of evaluating `c`\n */\nreagent.impl.component.wrap_render = (function reagent$impl$component$wrap_render(c,compiler){\nwhile(true){\nvar f = c.reagentRender;\nvar _ = null;\nvar res = ((c.cljsLegacyRender === true)?f.call(c,c):(function (){var v = reagent.impl.component.get_argv(c);\nvar n = cljs.core.count(v);\nvar G__9430 = n;\nswitch (G__9430) {\ncase (1):\nreturn f.call(c);\n\nbreak;\ncase (2):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)));\n\nbreak;\ncase (3):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)));\n\nbreak;\ncase (4):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)));\n\nbreak;\ncase (5):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(4)));\n\nbreak;\ndefault:\nreturn f.apply(c,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(v).slice((1)));\n\n}\n})());\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (c,compiler,f,_,res){\nreturn (function() { \nvar G__9547__delegate = function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__9547 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__9549__i = 0, G__9549__a = new Array(arguments.length -  0);\nwhile (G__9549__i < G__9549__a.length) {G__9549__a[G__9549__i] = arguments[G__9549__i + 0]; ++G__9549__i;}\n  args = new cljs.core.IndexedSeq(G__9549__a,0,null);\n} \nreturn G__9547__delegate.call(this,args);};\nG__9547.cljs$lang$maxFixedArity = 0;\nG__9547.cljs$lang$applyTo = (function (arglist__9550){\nvar args = cljs.core.seq(arglist__9550);\nreturn G__9547__delegate(args);\n});\nG__9547.cljs$core$IFn$_invoke$arity$variadic = G__9547__delegate;\nreturn G__9547;\n})()\n;})(c,compiler,f,_,res))\n:res);\n(c.reagentRender = f__$1);\n\nvar G__9551 = c;\nvar G__9552 = compiler;\nc = G__9551;\ncompiler = G__9552;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.component_name = (function reagent$impl$component$component_name(c){\nvar or__4126__auto__ = (function (){var G__9437 = c;\nvar G__9437__$1 = (((G__9437 == null))?null:G__9437.constructor);\nif((G__9437__$1 == null)){\nreturn null;\n} else {\nreturn G__9437__$1.displayName;\n}\n})();\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar G__9438 = c;\nvar G__9438__$1 = (((G__9438 == null))?null:G__9438.constructor);\nif((G__9438__$1 == null)){\nreturn null;\n} else {\nreturn G__9438__$1.name;\n}\n}\n});\nreagent.impl.component.comp_name = (function reagent$impl$component$comp_name(){\nreturn \"\";\n\n});\nreagent.impl.component.do_render = (function reagent$impl$component$do_render(c,compiler){\nvar _STAR_current_component_STAR__orig_val__9441 = reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__9442 = c;\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__9442);\n\ntry{return reagent.impl.component.wrap_render(c,compiler);\n\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__9441);\n}});\nreagent.impl.component.rat_opts = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370),true], null);\nreagent.impl.component.custom_wrapper = (function reagent$impl$component$custom_wrapper(key,f){\nvar G__9445 = key;\nvar G__9445__$1 = (((G__9445 instanceof cljs.core.Keyword))?G__9445.fqn:null);\nswitch (G__9445__$1) {\ncase \"getDefaultProps\":\nthrow (new Error(\"getDefaultProps not supported\"));\n\nbreak;\ncase \"getDerivedStateFromProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_getDerivedStateFromProps(props,state){\nreturn f.call(null,(function (){var temp__5737__auto__ = props.argv;\nif((temp__5737__auto__ == null)){\nreturn props;\n} else {\nvar a = temp__5737__auto__;\nreturn reagent.impl.component.extract_props(a);\n}\n})(),state);\n});\n\nbreak;\ncase \"getInitialState\":\nreturn (function reagent$impl$component$custom_wrapper_$_getInitialState(c){\nreturn cljs.core.reset_BANG_(reagent.impl.component.state_atom(c),f.call(c,c));\n});\n\nbreak;\ncase \"getSnapshotBeforeUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_getSnapshotBeforeUpdate(oldprops,oldstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate);\n});\n\nbreak;\ncase \"componentWillReceiveProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \"UNSAFE_componentWillReceiveProps\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \"shouldComponentUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_shouldComponentUpdate(nextprops,nextstate){\nvar or__4126__auto__ = reagent.impl.util._STAR_always_update_STAR_;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar c = this;\nvar old_argv = c.props.argv;\nvar new_argv = nextprops.argv;\nvar noargv = (((old_argv == null)) || ((new_argv == null)));\nif((f == null)){\nvar or__4126__auto____$1 = noargv;\nif(or__4126__auto____$1){\nreturn or__4126__auto____$1;\n} else {\ntry{return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e9450){var e = e9450;\n\nreturn false;\n}}\n} else {\nif(noargv){\nreturn f.call(c,c,reagent.impl.component.get_argv(c),reagent.impl.component.props_argv(c,nextprops));\n} else {\nreturn f.call(c,c,old_argv,new_argv);\n\n}\n}\n}\n});\n\nbreak;\ncase \"componentWillUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \"UNSAFE_componentWillUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \"componentDidUpdate\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidUpdate(oldprops,oldstate,snapshot){\nvar c = this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate,snapshot);\n});\n\nbreak;\ncase \"componentWillMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"UNSAFE_componentWillMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"componentDidMount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidMount(){\nvar c = this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \"componentWillUnmount\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUnmount(){\nvar c = this;\nvar G__9456_9555 = goog.object.get(c,\"cljsRatom\");\nif((G__9456_9555 == null)){\n} else {\nreagent.ratom.dispose_BANG_(G__9456_9555);\n}\n\nreagent.impl.batching.mark_rendered(c);\n\nif((f == null)){\nreturn null;\n} else {\nreturn f.call(c,c);\n}\n});\n\nbreak;\ncase \"componentDidCatch\":\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidCatch(error,info){\nvar c = this;\nreturn f.call(c,c,error,info);\n});\n\nbreak;\ndefault:\nreturn null;\n\n}\n});\nreagent.impl.component.get_wrapper = (function reagent$impl$component$get_wrapper(key,f){\nvar wrap = reagent.impl.component.custom_wrapper(key,f);\nif(cljs.core.truth_((function (){var and__4115__auto__ = wrap;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn f;\n} else {\nreturn and__4115__auto__;\n}\n})())){\n} else {\n}\n\nvar or__4126__auto__ = wrap;\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn f;\n}\n});\nreagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",1795750960),null,new cljs.core.Keyword(null,\"componentWillUnmount\",\"componentWillUnmount\",1573788814),null], null);\nreagent.impl.component.dash_to_method_name = reagent.impl.util.memoize_1(reagent.impl.util.dash_to_method_name);\nreagent.impl.component.camelify_map_keys = (function reagent$impl$component$camelify_map_keys(fun_map){\nreturn cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(reagent.impl.component.dash_to_method_name(k)),v);\n}),cljs.core.PersistentArrayMap.EMPTY,fun_map);\n});\nreagent.impl.component.add_obligatory = (function reagent$impl$component$add_obligatory(fun_map){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reagent.impl.component.obligatory,fun_map], 0));\n});\nreagent.impl.component.wrap_funs = (function reagent$impl$component$wrap_funs(fmap,compiler){\n\n\nvar render_fun = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(fmap);\n}\n})();\nvar legacy_render = (new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(fmap) == null);\nvar name = (function (){var or__4126__auto__ = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = reagent.impl.util.fun_name(render_fun);\nif(cljs.core.truth_(or__4126__auto____$1)){\nreturn or__4126__auto____$1;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"reagent\"));\n}\n}\n})();\nvar fmap__$1 = cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,reagent.impl.component.get_wrapper(k,v));\n}),cljs.core.PersistentArrayMap.EMPTY,fmap);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(fmap__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613),legacy_render,new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),render_fun,new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),(function reagent$impl$component$wrap_funs_$_render(){\nvar c = this;\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.do_render(c,compiler);\n} else {\nvar rat = goog.object.get(c,\"cljsRatom\");\nreagent.impl.batching.mark_rendered(c);\n\nif((rat == null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.do_render(c,compiler);\n}),c,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n})], 0));\n});\nreagent.impl.component.map_to_js = (function reagent$impl$component$map_to_js(m){\nreturn cljs.core.reduce_kv((function (o,k,v){\nvar G__9462 = o;\ngoog.object.set(G__9462,cljs.core.name(k),v);\n\nreturn G__9462;\n}),({}),m);\n});\nreagent.impl.component.cljsify = (function reagent$impl$component$cljsify(body,compiler){\nreturn reagent.impl.component.wrap_funs(reagent.impl.component.add_obligatory(reagent.impl.component.camelify_map_keys(body)),compiler);\n});\nreagent.impl.component.built_in_static_method_names = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"childContextTypes\",\"childContextTypes\",578717991),new cljs.core.Keyword(null,\"contextTypes\",\"contextTypes\",-2023853910),new cljs.core.Keyword(null,\"contextType\",\"contextType\",1033066077),new cljs.core.Keyword(null,\"getDerivedStateFromProps\",\"getDerivedStateFromProps\",-991834739),new cljs.core.Keyword(null,\"getDerivedStateFromError\",\"getDerivedStateFromError\",166658477)], null);\n/**\n * Creates JS class based on provided Clojure map.\n * \n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n *   and can be provided in snake-case or camelCase.\n *   Constructor function is defined using key `:getInitialState`.\n * \n *   React built-in static methods or properties are automatically defined as statics.\n */\nreagent.impl.component.create_class = (function reagent$impl$component$create_class(body,compiler){\n\nvar body__$1 = reagent.impl.component.cljsify(body,compiler);\nvar methods$ = reagent.impl.component.map_to_js(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc,body__$1,new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601),new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916),new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383),reagent.impl.component.built_in_static_method_names], 0)));\nvar static_methods = reagent.impl.component.map_to_js(cljs.core.select_keys(body__$1,reagent.impl.component.built_in_static_method_names));\nvar display_name = new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar get_initial_state = new cljs.core.Keyword(null,\"getInitialState\",\"getInitialState\",1541760916).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar construct = new cljs.core.Keyword(null,\"constructor\",\"constructor\",-1953928811).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar cmp = (function (props,context,updater){\nvar this$ = this;\nmodule$node_modules$react$index.Component.call(this$,props,context,updater);\n\nif(cljs.core.truth_(construct)){\n(construct.cljs$core$IFn$_invoke$arity$2 ? construct.cljs$core$IFn$_invoke$arity$2(this$,props) : construct.call(null,this$,props));\n} else {\n}\n\nif(cljs.core.truth_(get_initial_state)){\n(this$.state = (get_initial_state.cljs$core$IFn$_invoke$arity$1 ? get_initial_state.cljs$core$IFn$_invoke$arity$1(this$) : get_initial_state.call(null,this$)));\n} else {\n}\n\n(this$.cljsMountOrder = reagent.impl.batching.next_mount_count());\n\nreturn this$;\n});\ngoog.object.extend(cmp.prototype,module$node_modules$react$index.Component.prototype,methods$);\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.render = new cljs.core.Keyword(null,\"render\",\"render\",-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.reagentRender = new cljs.core.Keyword(null,\"reagentRender\",\"reagentRender\",-358306383).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.cljsLegacyRender = new cljs.core.Keyword(null,\"cljsLegacyRender\",\"cljsLegacyRender\",-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\ngoog.object.extend(cmp,module$node_modules$react$index.Component,static_methods);\n\nif(cljs.core.truth_(display_name)){\n(cmp.displayName = display_name);\n\n(cmp.cljs$lang$ctorStr = display_name);\n\n(cmp.cljs$lang$ctorPrWriter = (function (this$,writer,opt){\nreturn cljs.core._write(writer,display_name);\n}));\n} else {\n}\n\n(cmp.cljs$lang$type = true);\n\n(cmp.prototype.constructor = cmp);\n\nreturn cmp;\n});\nreagent.impl.component.cached_react_class = (function reagent$impl$component$cached_react_class(compiler,c){\nreturn goog.object.get(c,reagent.impl.protocols.get_id(compiler));\n});\nreagent.impl.component.cache_react_class = (function reagent$impl$component$cache_react_class(compiler,c,constructor$){\ngoog.object.set(c,reagent.impl.protocols.get_id(compiler),constructor$);\n\nreturn constructor$;\n});\nreagent.impl.component.fn_to_class = (function reagent$impl$component$fn_to_class(compiler,f){\n\n\nif(reagent.impl.component.reagent_class_QMARK_(f)){\nreturn reagent.impl.component.cache_react_class(compiler,f,f);\n} else {\nvar spec = cljs.core.meta(f);\nvar withrender = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(spec,new cljs.core.Keyword(null,\"reagent-render\",\"reagent-render\",-985383853),f);\nvar res = reagent.impl.component.create_class(withrender,compiler);\nreturn reagent.impl.component.cache_react_class(compiler,f,res);\n}\n});\nreagent.impl.component.as_class = (function reagent$impl$component$as_class(tag,compiler){\nvar temp__5737__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\nif((temp__5737__auto__ == null)){\nreturn reagent.impl.component.fn_to_class(compiler,tag);\n} else {\nvar cached_class = temp__5737__auto__;\nreturn cached_class;\n}\n});\nreagent.impl.component.reactify_component = (function reagent$impl$component$reactify_component(comp,compiler){\nif(reagent.impl.component.react_class_QMARK_(comp)){\nreturn comp;\n} else {\nreturn reagent.impl.component.as_class(comp,compiler);\n}\n});\nreagent.impl.component.functional_wrap_render = (function reagent$impl$component$functional_wrap_render(compiler,c){\nwhile(true){\nvar f = c.reagentRender;\nvar _ = null;\nvar argv = c.argv;\nvar res = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,argv);\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 = ((reagent.impl.component.reagent_class_QMARK_(res))?((function (compiler,c,f,_,argv,res){\nreturn (function() { \nvar G__9558__delegate = function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__9558 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__9559__i = 0, G__9559__a = new Array(arguments.length -  0);\nwhile (G__9559__i < G__9559__a.length) {G__9559__a[G__9559__i] = arguments[G__9559__i + 0]; ++G__9559__i;}\n  args = new cljs.core.IndexedSeq(G__9559__a,0,null);\n} \nreturn G__9558__delegate.call(this,args);};\nG__9558.cljs$lang$maxFixedArity = 0;\nG__9558.cljs$lang$applyTo = (function (arglist__9560){\nvar args = cljs.core.seq(arglist__9560);\nreturn G__9558__delegate(args);\n});\nG__9558.cljs$core$IFn$_invoke$arity$variadic = G__9558__delegate;\nreturn G__9558;\n})()\n;})(compiler,c,f,_,argv,res))\n:res);\n(c.reagentRender = f__$1);\n\nvar G__9561 = compiler;\nvar G__9562 = c;\ncompiler = G__9561;\nc = G__9562;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.functional_do_render = (function reagent$impl$component$functional_do_render(compiler,c){\nvar _STAR_current_component_STAR__orig_val__9501 = reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__9502 = c;\n(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__temp_val__9502);\n\ntry{return reagent.impl.component.functional_wrap_render(compiler,c);\n\n}finally {(reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR__orig_val__9501);\n}});\nreagent.impl.component.functional_render = (function reagent$impl$component$functional_render(compiler,jsprops){\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.functional_do_render(compiler,jsprops);\n} else {\nvar argv = jsprops.argv;\nvar tag = jsprops.reagentRender;\nvar vec__9514 = module$node_modules$react$index.useState((0));\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9514,(0),null);\nvar update_count = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9514,(1),null);\nvar state_ref = module$node_modules$react$index.useRef();\nvar ___$1 = (cljs.core.truth_(state_ref.current)?null:(function (){var obj = ({});\n(obj.forceUpdate = (function (){\nreturn (update_count.cljs$core$IFn$_invoke$arity$1 ? update_count.cljs$core$IFn$_invoke$arity$1(cljs.core.inc) : update_count.call(null,cljs.core.inc));\n}));\n\n(obj.cljsMountOrder = reagent.impl.batching.next_mount_count());\n\n(obj.constructor = tag);\n\n(obj.reagentRender = tag);\n\nreturn (state_ref.current = obj);\n})());\nvar reagent_state = state_ref.current;\nvar rat = goog.object.get(reagent_state,\"cljsRatom\");\nmodule$node_modules$react$index.useEffect((function reagent$impl$component$functional_render_$_mount(){\nreturn (function reagent$impl$component$functional_render_$_mount_$_unmount(){\nvar G__9529 = goog.object.get(reagent_state,\"cljsRatom\");\nif((G__9529 == null)){\nreturn null;\n} else {\nreturn reagent.ratom.dispose_BANG_(G__9529);\n}\n});\n}),[]);\n\n(reagent_state.argv = argv);\n\nreagent.impl.batching.mark_rendered(reagent_state);\n\nif((rat == null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.functional_do_render(compiler,reagent_state);\n}),reagent_state,\"cljsRatom\",reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n});\nreagent.impl.component.functional_render_memo_fn = (function reagent$impl$component$functional_render_memo_fn(prev_props,next_props){\nvar old_argv = prev_props.argv;\nvar new_argv = next_props.argv;\nif(reagent.impl.util._STAR_always_update_STAR_ === false){\ntry{return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e9531){var e = e9531;\n\nreturn false;\n}} else {\nreturn false;\n}\n});\n/**\n * Create copy of functional-render with displayName set to name of the\n *   original Reagent component.\n */\nreagent.impl.component.functional_render_fn = (function reagent$impl$component$functional_render_fn(compiler,tag){\nvar or__4126__auto__ = reagent.impl.component.cached_react_class(compiler,tag);\nif(cljs.core.truth_(or__4126__auto__)){\nreturn or__4126__auto__;\n} else {\nvar f = (function (jsprops){\nreturn reagent.impl.component.functional_render(compiler,jsprops);\n});\nvar _ = (f.displayName = reagent.impl.util.fun_name(tag));\nvar f__$1 = module$node_modules$react$index.memo(f,reagent.impl.component.functional_render_memo_fn);\nreagent.impl.component.cache_react_class(compiler,tag,f__$1);\n\nreturn f__$1;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/impl/component.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",27],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$dev?","~$reagent.debug","~$warn","^D","~$error","^D","~$warn-unless","^D","~$assert-callable","^D"],"~:excludes",["~#set",[]],"~:name","~$reagent.impl.component","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^Q","~$reagent.impl.protocols","^R","~$p","^R","~$reagent.ratom","^S","^>","^?","~$cljs.core","^T","^?","^?","~$gobj","~$goog.object","~$goog","^W","^V","^V","~$reagent.impl.batching","^X","~$util","^Q","~$ratom","^S","~$batch","^X","^D","^D"],"~:seen",["^J",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D","^T","^T","^S","^S","^Z","^S"],"~:form",["~#list",["~$ns","^L",["^15",["^11",["^V","~:as","^U"],["^>","^17","^>"],["^Q","^17","^Y"],["^X","^17","^["],["^R","^17","~$p"],["^S","^17","^Z"],["^D","~:refer-macros",["^C","^E","^F","^G","^H"]]]]]],"~:flags",["^ ","^11",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^W","^T","^V","^?","^Q","^X","^R","^S","^D"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","reagent/impl/component.cljs"],"~:compiled-at",1611615888700,"~:resource-name","reagent/impl/component.cljs","~:warnings",[],"~:source","(ns reagent.impl.component\n  (:require [goog.object :as gobj]\n            [react :as react]\n            [reagent.impl.util :as util]\n            [reagent.impl.batching :as batch]\n            [reagent.impl.protocols :as p]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dev? warn error warn-unless assert-callable]]))\n\n(declare ^:dynamic *current-component*)\n\n\n;;; Argv access\n\n(defn extract-props [v]\n  (let [p (nth v 1 nil)]\n    (if (map? p) p)))\n\n(defn extract-children [v]\n  (let [p (nth v 1 nil)\n        first-child (if (or (nil? p) (map? p)) 2 1)]\n    (if (> (count v) first-child)\n      (subvec v first-child))))\n\n(defn props-argv [^js/React.Component c p]\n  (if-some [a (.-argv p)]\n    a\n    [(.-constructor c) (util/shallow-obj-to-map p)]))\n\n(defn get-argv [^js/React.Component c]\n  (props-argv c (.-props c)))\n\n(defn get-props [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-props v)\n      (util/shallow-obj-to-map p))))\n\n(defn get-children [^js/React.Component c]\n  (let [p (.-props c)]\n    (if-some [v (.-argv p)]\n      (extract-children v)\n      (->> (.-children p)\n           (react/Children.toArray)\n           (into [])))))\n\n(defn ^boolean reagent-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-reagentRender)))))\n\n(defn ^boolean react-class? [c]\n  (and (fn? c)\n       (some? (some-> c (.-prototype) (.-render)))))\n\n(defn ^boolean reagent-component? [^clj c]\n  (some? (.-reagentRender c)))\n\n;;; State\n\n(defn state-atom [^clj this]\n  (let [sa (.-cljsState this)]\n    (if-not (nil? sa)\n      sa\n      (set! (.-cljsState this) (ratom/atom nil)))))\n\n;;; Rendering\n\n(defn wrap-render\n  \"Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`\"\n  [^clj c compiler]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        ;; cljsLegacyRender tells if this calls was defined\n        ;; using :render instead of :reagent-render\n        ;; in that case, the :render fn is called with just `this` as argument.\n        res (if (true? (.-cljsLegacyRender c))\n              (.call f c c)\n              (let [v (get-argv c)\n                    n (count v)]\n                (case n\n                  1 (.call f c)\n                  2 (.call f c (nth v 1))\n                  3 (.call f c (nth v 1) (nth v 2))\n                  4 (.call f c (nth v 1) (nth v 2) (nth v 3))\n                  5 (.call f c (nth v 1) (nth v 2) (nth v 3) (nth v 4))\n                  (.apply f c (.slice (into-array v) 1)))))]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur c compiler))\n      :else res)))\n\n(defn component-name [c]\n  (or (some-> c .-constructor .-displayName)\n      (some-> c .-constructor .-name)))\n\n(defn comp-name []\n  (if (dev?)\n    (let [c *current-component*\n          n (component-name c)]\n      (if-not (empty? n)\n        (str \" (in \" n \")\")\n        \"\"))\n    \"\"))\n\n(defn do-render [c compiler]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (wrap-render c compiler)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\"\n                          (comp-name)))))))\n      (wrap-render c compiler))))\n\n\n;;; Method wrapping\n\n(def rat-opts {:no-cache true})\n\n(defn custom-wrapper [key f]\n  (case key\n    :getDefaultProps\n    (throw (js/Error. \"getDefaultProps not supported\"))\n\n    :getDerivedStateFromProps\n    (fn getDerivedStateFromProps [props state]\n      ;; Read props from Reagent argv\n      (.call f nil (if-some [a (.-argv props)] (extract-props a) props) state))\n\n    ;; In ES6 React, this is now part of the constructor\n    :getInitialState\n    (fn getInitialState [c]\n      (reset! (state-atom c) (.call f c c)))\n\n    :getSnapshotBeforeUpdate\n    (fn getSnapshotBeforeUpdate [oldprops oldstate]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillReceiveProps\n    (fn componentWillReceiveProps [nextprops]\n      (this-as c (.call f c c (props-argv c nextprops))))\n\n    :shouldComponentUpdate\n    (fn shouldComponentUpdate [nextprops nextstate]\n      (or util/*always-update*\n          (this-as c\n                   ;; Don't care about nextstate here, we use forceUpdate\n                   ;; when only when state has changed anyway.\n                   (let [old-argv (.. c -props -argv)\n                         new-argv (.-argv nextprops)\n                         noargv (or (nil? old-argv) (nil? new-argv))]\n                     (cond\n                       (nil? f) (or noargv (try (not= old-argv new-argv)\n                                                (catch :default e\n                                                  (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n                                                  false)))\n                       noargv (.call f c c (get-argv c) (props-argv c nextprops))\n                       :else  (.call f c c old-argv new-argv))))))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillUpdate\n    (fn componentWillUpdate [nextprops nextstate]\n      (this-as c (.call f c c (props-argv c nextprops) nextstate)))\n\n    :componentDidUpdate\n    (fn componentDidUpdate [oldprops oldstate snapshot]\n      (this-as c (.call f c c (props-argv c oldprops) oldstate snapshot)))\n\n    ;; Deprecated - warning in 16.9 will work through 17.x\n    :componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    ;; Deprecated - will work in 17.x\n    :UNSAFE_componentWillMount\n    (fn componentWillMount []\n      (this-as c (.call f c c)))\n\n    :componentDidMount\n    (fn componentDidMount []\n      (this-as c (.call f c c)))\n\n    :componentWillUnmount\n    (fn componentWillUnmount []\n      (this-as c\n               (some-> (gobj/get c \"cljsRatom\") ratom/dispose!)\n               (batch/mark-rendered c)\n               (when-not (nil? f)\n                 (.call f c c))))\n\n    :componentDidCatch\n    (fn componentDidCatch [error info]\n      (this-as c (.call f c c error info)))\n\n    nil))\n\n(defn get-wrapper [key f]\n  (let [wrap (custom-wrapper key f)]\n    (when (and wrap f)\n      (assert-callable f))\n    (or wrap f)))\n\n;; Though the value is nil here, the wrapper function will be\n;; added to class to manage Reagent ratom lifecycle.\n(def obligatory {:shouldComponentUpdate nil\n                 :componentWillUnmount nil})\n\n(def dash-to-method-name (util/memoize-1 util/dash-to-method-name))\n\n(defn camelify-map-keys [fun-map]\n  (reduce-kv (fn [m k v]\n               (assoc m (-> k dash-to-method-name keyword) v))\n             {} fun-map))\n\n(defn add-obligatory [fun-map]\n  (merge obligatory fun-map))\n\n(defn wrap-funs [fmap compiler]\n  (when (dev?)\n    (let [renders (select-keys fmap [:render :reagentRender])\n          render-fun (-> renders vals first)]\n      (assert (not (:componentFunction fmap)) \":component-function is no longer supported, use :reagent-render instead.\")\n      (assert (pos? (count renders)) \"Missing reagent-render\")\n      (assert (== 1 (count renders)) \"Too many render functions supplied\")\n      (assert-callable render-fun)))\n  (let [render-fun (or (:reagentRender fmap)\n                       (:render fmap))\n        legacy-render (nil? (:reagentRender fmap))\n        name (or (:displayName fmap)\n                 (util/fun-name render-fun)\n                 (str (gensym \"reagent\")))\n        fmap (reduce-kv (fn [m k v]\n                          (assoc m k (get-wrapper k v)))\n                        {} fmap)]\n    (assoc fmap\n           :displayName name\n           :cljsLegacyRender legacy-render\n           :reagentRender render-fun\n           :render (fn render []\n                     (this-as c (if util/*non-reactive*\n                                  (do-render c compiler)\n                                  (let [^clj rat (gobj/get c \"cljsRatom\")]\n                                    (batch/mark-rendered c)\n                                    (if (nil? rat)\n                                      (ratom/run-in-reaction #(do-render c compiler) c \"cljsRatom\"\n                                                             batch/queue-render rat-opts)\n                                      (._run rat false)))))))))\n\n(defn map-to-js [m]\n  (reduce-kv (fn [o k v]\n               (doto o\n                 (gobj/set (name k) v)))\n             #js{} m))\n\n(defn cljsify [body compiler]\n  (-> body\n      camelify-map-keys\n      add-obligatory\n      (wrap-funs compiler)))\n\n;; Idea from:\n;; https://gist.github.com/pesterhazy/2a25c82db0519a28e415b40481f84554\n;; https://gist.github.com/thheller/7f530b34de1c44589f4e0671e1ef7533#file-es6-class-cljs-L18\n\n(def built-in-static-method-names\n  [:childContextTypes :contextTypes :contextType\n   :getDerivedStateFromProps :getDerivedStateFromError])\n\n(defn create-class\n  \"Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics.\"\n  [body compiler]\n  {:pre [(map? body)]}\n  (let [body (cljsify body compiler)\n        methods (map-to-js (apply dissoc body :displayName :getInitialState :constructor\n                                  :render :reagentRender\n                                  built-in-static-method-names))\n        static-methods (map-to-js (select-keys body built-in-static-method-names))\n        display-name (:displayName body)\n        get-initial-state (:getInitialState body)\n        construct (:constructor body)\n        cmp (fn [props context updater]\n              (this-as ^clj this\n                (.call react/Component this props context updater)\n                (when construct\n                  (construct this props))\n                (when get-initial-state\n                  (set! (.-state this) (get-initial-state this)))\n                (set! (.-cljsMountOrder this) (batch/next-mount-count))\n                this))]\n\n    (gobj/extend (.-prototype cmp) (.-prototype react/Component) methods)\n\n    ;; These names SHOULD be mangled by Closure so we can't use goog/extend\n\n    (when (:render body)\n      (set! (.-render ^js (.-prototype cmp)) (:render body)))\n\n    (when (:reagentRender body)\n      (set! (.-reagentRender ^clj (.-prototype cmp)) (:reagentRender body)))\n\n    (when (:cljsLegacyRender body)\n      (set! (.-cljsLegacyRender ^clj (.-prototype cmp)) (:cljsLegacyRender body)))\n\n    (gobj/extend cmp react/Component static-methods)\n\n    (when display-name\n      (set! (.-displayName cmp) display-name)\n      (set! (.-cljs$lang$ctorStr cmp) display-name)\n      (set! (.-cljs$lang$ctorPrWriter cmp)\n            (fn [this writer opt]\n              (cljs.core/-write writer display-name))))\n\n    (set! (.-cljs$lang$type cmp) true)\n    (set! (.. cmp -prototype -constructor) cmp)\n\n    cmp))\n\n;; Cache result to the tag but per compiler ID\n;; TODO: Generate cache & get methods to the Object using macro,\n;; can generate code calling interop forms.\n(defn cached-react-class [compiler ^clj c]\n  (gobj/get c (p/get-id compiler)))\n\n(defn cache-react-class [compiler ^clj c constructor]\n  (gobj/set c (p/get-id compiler) constructor)\n  constructor)\n\n(defn fn-to-class [compiler f]\n  (assert-callable f)\n  (warn-unless (not (and (react-class? f)\n                         (not (reagent-class? f))))\n               \"Using native React classes directly in Hiccup forms \"\n               \"is not supported. Use create-element or \"\n               \"adapt-react-class instead: \" (or (util/fun-name f)\n                                                 f)\n               (comp-name))\n  (if (reagent-class? f)\n    (cache-react-class compiler f f)\n    (let [spec (meta f)\n          withrender (assoc spec :reagent-render f)\n          res (create-class withrender compiler)]\n      (cache-react-class compiler f res))))\n\n(defn as-class [tag compiler]\n  (if-some [cached-class (cached-react-class compiler tag)]\n    cached-class\n    (fn-to-class compiler tag)))\n\n(defn reactify-component [comp compiler]\n  (if (react-class? comp)\n    comp\n    (as-class comp compiler)))\n\n(defn functional-wrap-render\n  [compiler ^clj c]\n  (let [f (.-reagentRender c)\n        _ (assert-callable f)\n        argv (.-argv c)\n        res (apply f argv)]\n    (cond\n      (vector? res) (p/as-element compiler res)\n      (ifn? res) (let [f (if (reagent-class? res)\n                           (fn [& args]\n                             (p/as-element compiler (apply vector res args)))\n                           res)]\n                   (set! (.-reagentRender c) f)\n                   (recur compiler c))\n      :else res)))\n\n(defn functional-do-render [compiler c]\n  (binding [*current-component* c]\n    (if (dev?)\n      ;; Log errors, without using try/catch (and mess up call stack)\n      (let [ok (array false)]\n        (try\n          (let [res (functional-wrap-render compiler c)]\n            (aset ok 0 true)\n            res)\n          (finally\n            (when-not (aget ok 0)\n              (error (str \"Error rendering component\" (comp-name)))))))\n      (functional-wrap-render compiler c))))\n\n(defn functional-render [compiler ^clj jsprops]\n  (if util/*non-reactive*\n    ;; Non-reactive component needs just the render fn and argv\n    (functional-do-render compiler jsprops)\n    (let [argv (.-argv jsprops)\n          tag (.-reagentRender jsprops)\n\n          ;; Use counter to trigger render manually.\n          [_ update-count] (react/useState 0)\n\n          ;; This object mimics React Class attributes and methods.\n          ;; To support form-2 components, even the render fn needs to\n          ;; be stored as it is created during the first render,\n          ;; and subsequent renders need to retrieve the created fn.\n          state-ref (react/useRef)\n\n          _ (when-not (.-current state-ref)\n              (let [obj #js {}]\n                (set! (.-forceUpdate obj) (fn [] (update-count inc)))\n                (set! (.-cljsMountOrder obj) (batch/next-mount-count))\n                ;; Use reagentRender name, as that is also used\n                ;; by class components, and some checks.\n                ;; reagentRender is replaced with form-2 inner fn,\n                ;; constructor refers to the original fn.\n                (set! (.-constructor obj) tag)\n                (set! (.-reagentRender obj) tag)\n\n                (set! (.-current state-ref) obj)))\n\n          reagent-state (.-current state-ref)\n\n          ;; FIXME: Access cljsRatom using interop forms\n          rat ^ratom/Reaction (gobj/get reagent-state \"cljsRatom\")]\n\n      (react/useEffect\n        (fn mount []\n          (fn unmount []\n            (some-> (gobj/get reagent-state \"cljsRatom\") ratom/dispose!)))\n        ;; Ignore props - only run effect once on mount and unmount\n        #js [])\n\n      ;; Argv is also stored in the state,\n      ;; so reaction fn will always see the latest value.\n      (set! (.-argv reagent-state) argv)\n\n      (batch/mark-rendered reagent-state)\n\n      ;; static-fns :render\n      (if (nil? rat)\n        (ratom/run-in-reaction\n          ;; Mock Class component API\n          #(functional-do-render compiler reagent-state)\n          reagent-state\n          \"cljsRatom\"\n          batch/queue-render\n          rat-opts)\n        ;; TODO: Consider passing props here, instead of keeping them in state?\n        (._run rat false)))))\n\n(defn functional-render-memo-fn\n  [prev-props next-props]\n  (let [old-argv (.-argv prev-props)\n        new-argv (.-argv next-props)]\n    (and (false? util/*always-update*)\n         (try\n           (= old-argv new-argv)\n           (catch :default e\n             (warn \"Exception thrown while comparing argv's in shouldComponentUpdate: \" old-argv \" \" new-argv \" \" e)\n             false)))))\n\n(defn functional-render-fn\n  \"Create copy of functional-render with displayName set to name of the\n  original Reagent component.\"\n  [compiler tag]\n  ;; TODO: Could be disabled for optimized builds?\n  ;; Or not currently - the memo wrap is required.\n  (or (cached-react-class compiler tag)\n      (let [f (fn [jsprops] (functional-render compiler jsprops))\n            _ (set! (.-displayName f) (util/fun-name tag))\n            f (react/memo f functional-render-memo-fn)]\n        (cache-react-class compiler tag f)\n        f)))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.impl.component/extract-props","v","p","cljs.core.nth","cljs.core/map?","reagent.impl.component/extract-children","first-child","cljs.core/count","cljs.core.subvec","reagent.impl.component/props-argv","c","temp__5737__auto__","a","reagent.impl.util/shallow-obj-to-map","reagent.impl.component/get-argv","reagent.impl.component/get-props","reagent.impl.component/get-children","js/module$node_modules$react$index.Children.toArray","cljs.core.into","reagent.impl.component/reagent-class?","cljs.core/fn?","G__9425","reagent.impl.component/react-class?","G__9429","reagent.impl.component/reagent-component?","reagent.impl.component/state-atom","this","sa","reagent.ratom.atom","reagent.impl.component/wrap-render","compiler","f","_","res","n","G__9430","cljs.core.into_array","cljs.core/vector?","reagent.impl.protocols/as-element","cljs.core/ifn?","args","cljs.core.apply","cljs.core/vector","reagent.impl.component/component-name","or__4126__auto__","G__9437","G__9438","reagent.impl.component/comp-name","reagent.impl.component/do-render","*current-component*-orig-val__9441","*current-component*-temp-val__9442","reagent.impl.component/*current-component*","reagent.impl.component/rat-opts","reagent.impl.component/custom-wrapper","key","G__9445","cljs.core/Keyword","js/Error","props","state","cljs.core/reset!","oldprops","oldstate","nextprops","nextstate","reagent.impl.util/*always-update*","old-argv","new-argv","noargv","e9450","cljs.core.not_EQ_","e","snapshot","G__9456","goog.object/get","reagent.ratom/dispose!","reagent.impl.batching/mark-rendered","error","info","reagent.impl.component/get-wrapper","wrap","and__4115__auto__","reagent.impl.component/obligatory","reagent.impl.component/dash-to-method-name","reagent.impl.util/memoize-1","reagent.impl.util/dash-to-method-name","reagent.impl.component/camelify-map-keys","fun-map","cljs.core/reduce-kv","m","k","cljs.core.assoc","cljs.core.keyword","reagent.impl.component/add-obligatory","cljs.core.merge","reagent.impl.component/wrap-funs","fmap","render-fun","legacy-render","name","reagent.impl.util/fun-name","cljs.core.gensym","reagent.impl.util/*non-reactive*","rat","reagent.ratom/run-in-reaction","reagent.impl.batching/queue-render","reagent.impl.component/map-to-js","o","G__9462","goog.object/set","cljs.core/name","reagent.impl.component/cljsify","body","reagent.impl.component/built-in-static-method-names","reagent.impl.component/create-class","methods","cljs.core/dissoc","static-methods","cljs.core/select-keys","display-name","get-initial-state","construct","cmp","context","updater","js/module$node_modules$react$index.Component","reagent.impl.batching/next-mount-count","goog.object/extend","writer","opt","cljs.core/-write","reagent.impl.component/cached-react-class","reagent.impl.protocols/get-id","reagent.impl.component/cache-react-class","constructor","reagent.impl.component/fn-to-class","spec","cljs.core/meta","withrender","reagent.impl.component/as-class","tag","cached-class","reagent.impl.component/reactify-component","comp","reagent.impl.component/functional-wrap-render","argv","reagent.impl.component/functional-do-render","*current-component*-orig-val__9501","*current-component*-temp-val__9502","reagent.impl.component/functional-render","jsprops","vec__9514","update-count","js/module$node_modules$react$index.useState","state-ref","js/module$node_modules$react$index.useRef","obj","cljs.core/inc","reagent-state","js/module$node_modules$react$index.useEffect","G__9529","reagent.impl.component/functional-render-memo-fn","prev-props","next-props","e9531","cljs.core._EQ_","reagent.impl.component/functional-render-fn","js/module$node_modules$react$index.memo"]],"~:used-vars",["^J",["~$reagent.impl.component/as-class","~$reagent.impl.component/get-children","~$cljs.core/keyword","~$reagent.impl.component/extract-props","~$reagent.impl.component/camelify-map-keys","~$reagent.impl.component/custom-wrapper","~$cljs.core/vector?","~$cljs.core/=","~$reagent.impl.component/map-to-js","~$cljs.core/ifn?","~$reagent.impl.batching/queue-render","~$cljs.core/-write","~$reagent.impl.component/cached-react-class","~$reagent.impl.component/reagent-component?","~$cljs.core/count","~$reagent.impl.component/dash-to-method-name","~$reagent.impl.component/functional-render-fn","~$reagent.impl.util/*non-reactive*","~$reagent.impl.protocols/get-id","~$cljs.core/not=","~$reagent.impl.component/functional-render","~$reagent.impl.component/comp-name","~$reagent.impl.component/wrap-funs","~$reagent.impl.component/extract-children","~$reagent.impl.util/shallow-obj-to-map","~$cljs.core/empty?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$reagent.ratom/dispose!","~$reagent.impl.component/functional-do-render","~$reagent.impl.batching/mark-rendered","~$cljs.core/fn?","~$reagent.impl.component/rat-opts","~$reagent.impl.component/component-name","~$reagent.impl.component/cache-react-class","~$reagent.impl.component/do-render","~$goog.object/set","~$reagent.impl.component/functional-render-memo-fn","~$reagent.impl.util/*always-update*","~$reagent.impl.component/cljsify","~$js/module$node_modules$react$index.Children.toArray","~$cljs.core/subvec","~$reagent.impl.component/create-class","~$reagent.impl.component/functional-wrap-render","~$reagent.impl.component/get-argv","~$reagent.ratom/run-in-reaction","~$reagent.impl.component/react-class?","~$reagent.impl.util/memoize-1","~$reagent.impl.util/dash-to-method-name","~$reagent.impl.component/built-in-static-method-names","~$reagent.impl.component/fn-to-class","~$reagent.impl.component/reactify-component","~$cljs.core/not","~$reagent.impl.component/reagent-class?","~$reagent.impl.component/props-argv","~$cljs.core/assoc","~$reagent.impl.component/obligatory","~$goog.object/extend","~$reagent.impl.component/*current-component*","~$js/module$node_modules$react$index.useEffect","~$reagent.impl.component/get-props","~$cljs.core/reduce-kv","~$reagent.impl.protocols/as-element","~$reagent.impl.component/get-wrapper","~$reagent.impl.component/add-obligatory","~$reagent.impl.component/wrap-render","~$js/module$node_modules$react$index.Component","~$reagent.ratom/atom","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$reagent.impl.component/state-atom","~$goog.object/get"]]],"~:cache-keys",["~#cmap",[["^1=","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^W","^T","^D","^Q"]]],["^1=","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","~$goog.dom.HtmlElement"]]],["^1=","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","~$goog.array","~$goog.asserts"]]],["^1=","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","~$goog.labs.userAgent.util","^V","~$goog.string.internal"]]],["^1=","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3E"]]],["^1=","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C"]]],["^1=","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^T","~$clojure.string","~$clojure.walk","^V","^D"]]],["^1=","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^T","^Q","^D","^X","~$clojure.set","^V"]]],["^1=","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3=",["^ ","^3>",3,"^3?",["^J",[1,2]],"^3@",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1=","shadow/js.js"],["adfcfe08c6c4ee4450d5eb55decfbe1c8816cd7f","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C"]]],"~:SHADOW-TIMESTAMP",[1611523148000,1611523148000,1611523009000],["^3O","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^3=",["^ ","^3>",2,"^3?",["^J",[0]],"^3@",["^3P","~$module$node_modules$object_assign$index"]]],["^1=","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C","~$goog.reflect"]]],["^1=","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C","~$goog.html.trustedtypes","^3H","^3I","^3J","^3K"]]],["^1=","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","^3C","~$goog.html.SafeUrl","^3J","^3K","^3E"]]],["^1=","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3W","^3G","~$goog.html.uncheckedconversions","^3J","^3E"]]],["^1=","reagent/impl/component.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3=",["^ ","^3>",null,"^3?",["^J",[3]],"^3@",["^W","^T","^V","^?","^Q","^X","^R","^S","^D"]]],["^1=","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^T"]]],["^1=","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1=","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","^3C","~$goog.dom.TagName","~$goog.dom.tags","^3[","^40","~$goog.html.SafeStyleSheet","^3W","^3G","^3V","^3H","^3I","~$goog.labs.userAgent.browser","^V","^3J","^3K","^3E"]]],["^1=","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^V"]]],["^1=","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1=","reagent/impl/protocols.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^T"]]],["^1=","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","^3C","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^3O","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","519ffd5a4c91b67302cc9947b794966d629860cd","^3=",["^ ","^3>",0,"^3?",["^J",[]],"^3@",["^3P"]]],["^1=","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",[]]],["^1=","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","^V"]]],["^1=","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^T","^4:","~$goog.string.StringBuffer"]]],["^3O","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","ec51811aee0e84dcb5ca27e77681d692f87bd8e2","6093d43b27c84de58b9ce55e3a930469339c9e54","^3=",["^ ","^3>",1,"^3?",["^J",[0]],"^3@",["^3P","^3T"]]],["^1=","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","~$goog.dom.safe","^41","^3J","^3E"]]],["^1=","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3E"]]],["^1=","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","^3C","^3Y","~$goog.math"]]],["^1=","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C","^3Z","^3[","^40","^46","^3W","^3G","^3J","^3E"]]],["^1=","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W"]]],["^1=","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","~$goog.math.Long","~$goog.math.Integer","^4:","^V","^3B","~$goog.Uri","^4@"]]],["^1=","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C","^3V","^3J","^3K"]]],["^1=","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^T"]]],["^1=","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","^3C","^40","^V","^3J","^3K","^3E"]]],["^1=","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3U"]]],["^1=","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^T"]]],["^1=","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3B","^3C","^4:"]]],["^1=","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3=",["^ ","^3>",null,"^3?",["^J",[]],"^3@",["^W","^3C","^3K"]]]]],"~:clj-info",["^ ","jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1608999849000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/impl/component.cljs","^7",1,"^8",5,"^9",1,"^:",27],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D","^E","^D","^F","^D","^G","^D","^H","^D"],"^I",["^J",[]],"~:shadow/js-access-properties",["^J",["useRef","Children.toArray","Component","useEffect","useState","memo"]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R","~$p","^R","^S","^S","^>","^?","^T","^T","^?","^?","^U","^V","^W","^W","^V","^V","^X","^X","^Y","^Q","^Z","^S","^[","^X","^D","^D"],"^10",["^J",["^11"]],"~:shadow/js-access-global",["^J",["Error"]],"^12",null,"~:defs",["^ ","~$get-props",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",33,"^8",7,"^9",33,"^:",16,"~:arglists",["^15",["~$quote",["^15",[["~$c"]]]]]],"^K","^2Z","^6","reagent/impl/component.cljs","^:",16,"~:method-params",["^15",[["~$c"]]],"~:protocol-impl",null,"~:arglists-meta",["^15",[null,null]],"^8",1,"~:variadic?",false,"^7",33,"~:ret-tag",["^J",[null,"~$any","~$clj-nil"]],"^9",33,"~:max-fixed-arity",1,"~:fn-var",true,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"~$get-wrapper",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",223,"^8",7,"^9",223,"^:",18,"^5<",["^15",["^5=",["^15",[["~$key","~$f"]]]]]],"^K","^31","^6","reagent/impl/component.cljs","^:",18,"^5>",["^15",[["^5H","~$f"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",223,"^5B",["^J",[null,"^5C"]],"^9",223,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5H","~$f"]]]]]],"~$get-argv",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",30,"^8",7,"^9",30,"^:",15,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"^K","^2J","^6","reagent/impl/component.cljs","^:",15,"^5>",["^15",[["~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",30,"^5B",["^J",["~$cljs.core/IVector","^5C"]],"^9",30,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"~$wrap-render",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",68,"^8",7,"^9",68,"^:",18,"^5<",["^15",["^5=",["^15",[["~$c","~$compiler"]]]]],"~:doc","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"^K","^33","^6","reagent/impl/component.cljs","^:",18,"^5>",["^15",[["~$c","^5L"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",68,"^5B",["^J",[null,"^5C"]],"^9",68,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$c","^5L"]]]]],"^5M","Calls the render function of the component `c`.  If result `res` evaluates to a:\n     1) Vector (form-1 component) - Treats the vector as hiccup and returns\n        a react element with a render function based on that hiccup\n     2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n        and calls wrap-render again (`recur`), until the render result doesn't evaluate to a function.\n     3) Anything else - Returns the result of evaluating `c`"],"~$rat-opts",["^ ","^K","^2>","^6","reagent/impl/component.cljs","^7",133,"^8",1,"^9",133,"^:",14,"^5",["^ ","^6","reagent/impl/component.cljs","^7",133,"^8",6,"^9",133,"^:",14],"~:tag","~$cljs.core/IMap"],"~$obligatory",["^ ","^K","^2V","^6","reagent/impl/component.cljs","^7",231,"^8",1,"^9",231,"^:",16,"^5",["^ ","^6","reagent/impl/component.cljs","^7",231,"^8",6,"^9",231,"^:",16],"^5O","^5P"],"~$props-argv",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",25,"^8",7,"^9",25,"^:",17,"^5<",["^15",["^5=",["^15",[["~$c","~$p"]]]]]],"^K","^2T","^6","reagent/impl/component.cljs","^:",17,"^5>",["^15",[["~$c","~$p"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",25,"^5B",["^J",["^5J","^5C"]],"^9",25,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$c","~$p"]]]]]],"~$built-in-static-method-names",["^ ","^K","^2O","^6","reagent/impl/component.cljs","^7",291,"^8",1,"^9",291,"^:",34,"^5",["^ ","^6","reagent/impl/component.cljs","^7",291,"^8",6,"^9",291,"^:",34],"^5O","^5J"],"~$do-render",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",115,"^8",7,"^9",115,"^:",16,"^5<",["^15",["^5=",["^15",[["~$c","^5L"]]]]]],"^K","^2A","^6","reagent/impl/component.cljs","^:",16,"^5>",["^15",[["~$c","^5L"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",115,"^9",115,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$c","^5L"]]]]]],"~$comp-name",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",106,"^8",7,"^9",106,"^:",16,"^5<",["^15",["^5=",["^15",[[]]]]]],"^K","^22","^6","reagent/impl/component.cljs","^:",16,"^5>",["^15",[[]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",106,"^5B","~$string","^9",106,"^5E",0,"^5F",true,"^5<",["^15",["^5=",["^15",[[]]]]]],"~$add-obligatory",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",241,"^8",7,"^9",241,"^:",21,"^5<",["^15",["^5=",["^15",[["~$fun-map"]]]]]],"^K","^32","^6","reagent/impl/component.cljs","^:",21,"^5>",["^15",[["^5X"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",241,"^5B",["^J",["^5C","^5D"]],"^9",241,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5X"]]]]]],"~$cached-react-class",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",353,"^8",7,"^9",353,"^:",25,"^5<",["^15",["^5=",["^15",[["^5L","~$c"]]]]]],"^K","^1U","^6","reagent/impl/component.cljs","^:",25,"^5>",["^15",[["^5L","~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",353,"^5B","^5C","^9",353,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5L","~$c"]]]]]],"~$state-atom",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",60,"^8",7,"^9",60,"^:",17,"^5<",["^15",["^5=",["^15",[["~$this"]]]]]],"^K","^39","^6","reagent/impl/component.cljs","^:",17,"^5>",["^15",[["^5["]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",60,"^5B",["^J",[null,"^5C"]],"^9",60,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5["]]]]]],"~$functional-wrap-render",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",386,"^8",7,"^9",386,"^:",29,"^5<",["^15",["^5=",["^15",[["^5L","~$c"]]]]]],"^K","^2I","^6","reagent/impl/component.cljs","^:",29,"^5>",["^15",[["^5L","~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",386,"^5B","^5C","^9",386,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5L","~$c"]]]]]],"~$reagent-component?",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",55,"^8",16,"^9",55,"^:",34,"^5O","~$boolean","^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"^K","^1V","^6","reagent/impl/component.cljs","^:",34,"^5>",["^15",[["~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",55,"^5B","^62","^9",55,"^5E",1,"^5O","^62","^5F",true,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"~$as-class",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",376,"^8",7,"^9",376,"^:",15,"^5<",["^15",["^5=",["^15",[["~$tag","^5L"]]]]]],"^K","^1I","^6","reagent/impl/component.cljs","^:",15,"^5>",["^15",[["^64","^5L"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",376,"^5B","^5C","^9",376,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^64","^5L"]]]]]],"~$dash-to-method-name",["^ ","^K","^1X","^6","reagent/impl/component.cljs","^7",234,"^8",1,"^9",234,"^:",25,"^5",["^ ","^6","reagent/impl/component.cljs","^7",234,"^8",6,"^9",234,"^:",25],"^5O","~$function"],"~$reagent-class?",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",47,"^8",16,"^9",47,"^:",30,"^5O","^62","^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"^K","^2S","^6","reagent/impl/component.cljs","^:",30,"^5>",["^15",[["~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",47,"^5B","^62","^9",47,"^5E",1,"^5O","^62","^5F",true,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"~$functional-render-memo-fn",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",475,"^8",7,"^9",475,"^:",32,"^5<",["^15",["^5=",["^15",[["~$prev-props","~$next-props"]]]]]],"^K","^2C","^6","reagent/impl/component.cljs","^:",32,"^5>",["^15",[["^69","^6:"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",475,"^5B",["^J",[null,"^62"]],"^9",475,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^69","^6:"]]]]]],"~$fn-to-class",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",360,"^8",7,"^9",360,"^:",18,"^5<",["^15",["^5=",["^15",[["^5L","~$f"]]]]]],"^K","^2P","^6","reagent/impl/component.cljs","^:",18,"^5>",["^15",[["^5L","~$f"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",360,"^5B","^5C","^9",360,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5L","~$f"]]]]]],"~$reactify-component",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",381,"^8",7,"^9",381,"^:",25,"^5<",["^15",["^5=",["^15",[["~$comp","^5L"]]]]]],"^K","^2Q","^6","reagent/impl/component.cljs","^:",25,"^5>",["^15",[["^6=","^5L"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",381,"^5B",["^J",[null,"^5C"]],"^9",381,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^6=","^5L"]]]]]],"~$map-to-js",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",275,"^8",7,"^9",275,"^:",16,"^5<",["^15",["^5=",["^15",[["~$m"]]]]]],"^K","^1Q","^6","reagent/impl/component.cljs","^:",16,"^5>",["^15",[["~$m"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",275,"^5B",["^J",[null,"^5C"]],"^9",275,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$m"]]]]]],"~$component-name",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",102,"^8",7,"^9",102,"^:",21,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"^K","^2?","^6","reagent/impl/component.cljs","^:",21,"^5>",["^15",[["~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",102,"^5B",["^J",["^5C","^5D"]],"^9",102,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"~$extract-children",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",19,"^8",7,"^9",19,"^:",23,"^5<",["^15",["^5=",["^15",[["~$v"]]]]]],"^K","^24","^6","reagent/impl/component.cljs","^:",23,"^5>",["^15",[["~$v"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",19,"^5B",["^J",["^5C","^5D"]],"^9",19,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$v"]]]]]],"~$functional-render",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",416,"^8",7,"^9",416,"^:",24,"^5<",["^15",["^5=",["^15",[["^5L","~$jsprops"]]]]]],"^K","^21","^6","reagent/impl/component.cljs","^:",24,"^5>",["^15",[["^5L","^6B"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",416,"^5B","^5C","^9",416,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5L","^6B"]]]]]],"~$functional-do-render",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",402,"^8",7,"^9",402,"^:",27,"^5<",["^15",["^5=",["^15",[["^5L","~$c"]]]]]],"^K","^2;","^6","reagent/impl/component.cljs","^:",27,"^5>",["^15",[["^5L","~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",402,"^9",402,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5L","~$c"]]]]]],"~$extract-props",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",15,"^8",7,"^9",15,"^:",20,"^5<",["^15",["^5=",["^15",[["~$v"]]]]]],"^K","^1L","^6","reagent/impl/component.cljs","^:",20,"^5>",["^15",[["~$v"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",15,"^5B",["^J",[null,"^5C","^5D"]],"^9",15,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$v"]]]]]],"~$*current-component*",["^ ","^5",["^ ","^6","reagent/impl/component.cljs","^7",10,"^8",20,"^9",10,"^:",39,"~:dynamic",true,"~:declared",true],"^K","^2X","^6","reagent/impl/component.cljs","^:",39,"^8",1,"^6F",true,"^7",10,"^6G",true,"^9",10,"^5O","^5C"],"~$get-children",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",39,"^8",7,"^9",39,"^:",19,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"^K","^1J","^6","reagent/impl/component.cljs","^:",19,"^5>",["^15",[["~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",39,"^5B",["^J",[null,"~$clj","^5C","^5D"]],"^9",39,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"~$camelify-map-keys",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",236,"^8",7,"^9",236,"^:",24,"^5<",["^15",["^5=",["^15",[["^5X"]]]]]],"^K","^1M","^6","reagent/impl/component.cljs","^:",24,"^5>",["^15",[["^5X"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",236,"^5B",["^J",[null,"^5C"]],"^9",236,"^5E",1,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5X"]]]]]],"~$cljsify",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",281,"^8",7,"^9",281,"^:",14,"^5<",["^15",["^5=",["^15",[["~$body","^5L"]]]]]],"^K","^2E","^6","reagent/impl/component.cljs","^:",14,"^5>",["^15",[["^6L","^5L"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",281,"^5B",["^J",["^6I","^5C"]],"^9",281,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^6L","^5L"]]]]]],"~$functional-render-fn",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",486,"^8",7,"^9",486,"^:",27,"^5<",["^15",["^5=",["^15",[["^5L","^64"]]]]],"^5M","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"^K","^1Y","^6","reagent/impl/component.cljs","^:",27,"^5>",["^15",[["^5L","^64"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",486,"^5B",["^J",["^5C","~$js"]],"^9",486,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5L","^64"]]]]],"^5M","Create copy of functional-render with displayName set to name of the\n  original Reagent component."],"~$react-class?",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",51,"^8",16,"^9",51,"^:",28,"^5O","^62","^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"^K","^2L","^6","reagent/impl/component.cljs","^:",28,"^5>",["^15",[["~$c"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",51,"^5B","^62","^9",51,"^5E",1,"^5O","^62","^5F",true,"^5<",["^15",["^5=",["^15",[["~$c"]]]]]],"~$cache-react-class",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",356,"^8",7,"^9",356,"^:",24,"^5<",["^15",["^5=",["^15",[["^5L","~$c","~$constructor"]]]]]],"^K","^2@","^6","reagent/impl/component.cljs","^:",24,"^5>",["^15",[["^5L","~$c","^6Q"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",356,"^9",356,"^5E",3,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5L","~$c","^6Q"]]]]]],"~$custom-wrapper",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",135,"^8",7,"^9",135,"^:",21,"^5<",["^15",["^5=",["^15",[["^5H","~$f"]]]]]],"^K","^1N","^6","reagent/impl/component.cljs","^:",21,"^5>",["^15",[["^5H","~$f"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",135,"^9",135,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^5H","~$f"]]]]]],"~$create-class",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",295,"^8",7,"^9",295,"^:",19,"^5<",["^15",["^5=",["^15",[["^6L","^5L"]]]]],"^5M","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"^K","^2H","^6","reagent/impl/component.cljs","^:",19,"^5>",["^15",[["^6L","^5L"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",295,"^5B","^66","^9",295,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^6L","^5L"]]]]],"^5M","Creates JS class based on provided Clojure map.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n  Constructor function is defined using key `:getInitialState`.\n\n  React built-in static methods or properties are automatically defined as statics."],"~$wrap-funs",["^ ","^5;",null,"^5",["^ ","^6","reagent/impl/component.cljs","^7",244,"^8",7,"^9",244,"^:",16,"^5<",["^15",["^5=",["^15",[["~$fmap","^5L"]]]]]],"^K","^23","^6","reagent/impl/component.cljs","^:",16,"^5>",["^15",[["^6U","^5L"]]],"^5?",null,"^5@",["^15",[null,null]],"^8",1,"^5A",false,"^7",244,"^5B",["^J",["^6I","^5C"]],"^9",244,"^5E",2,"^5F",true,"^5<",["^15",["^5=",["^15",[["^6U","^5L"]]]]]]],"^13",["^ ","^D","^D","^T","^T","^S","^S","^Z","^S"],"~:cljs.analyzer/constants",["^ ","^10",["^J",["~:cljsLegacyRender","~:else","~:childContextTypes","~:displayName","~:contextTypes","~:getDerivedStateFromProps","~:getDerivedStateFromError","~:componentWillUnmount","~:shouldComponentUpdate","~:reagentRender","~:no-cache","~:render","~:reagent-render","~:getInitialState","~:constructor","~:contextType"]],"~:order",["^6X","^75","^73","^72","^76","^74","^6Z","^6W","^6Y","^6[","^7:","^70","^71","^78","^79","^77"]],"^19",["^ ","^11",["^J",[]]],"^1:",["^ "],"^1;",["^W","^T","^V","^?","^Q","^X","^R","^S","^D"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^3<",[["^7>","~:static-fns"],true,["^7>","~:shadow-tweaks"],null,["^7>","~:source-map-inline"],null,["^7>","~:elide-asserts"],true,["^7>","~:optimize-constants"],null,["^7>","^1@"],null,["^7>","~:external-config"],null,["^7>","~:tooling-config"],null,["^7>","~:emit-constants"],null,["^7>","~:load-tests"],false,["^7>","~:form-size-threshold"],null,["^7>","~:data-readers"],null,["^7>","~:infer-externs"],"~:auto",["^7>","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^7>","~:fn-invoke-direct"],null,["^7>","~:source-map"],null]]]