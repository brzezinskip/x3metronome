["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nreagent.ratom.debug = false;\nreagent.ratom.generation = (0);\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nif((len === reagent.ratom.arr_len(y))){\nvar i = (0);\nwhile(true){\nvar or__4126__auto__ = (i === len);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__9415 = (i + (1));\ni = G__9415;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn false;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__9277 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__9278 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__9278);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__9277);\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5739__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__9279_SHARP_,p2__9280_SHARP_,p3__9281_SHARP_){\nvar G__9282 = p1__9279_SHARP_;\nG__9282.push(p2__9280_SHARP_);\n\nG__9282.push(p3__9281_SHARP_);\n\nreturn G__9282;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_9420 = (a[i]);\nvar f_9421 = (a[(i + (1))]);\n(f_9421.cljs$core$IFn$_invoke$arity$4 ? f_9421.cljs$core$IFn$_invoke$arity$4(k_9420,this$,old,new$) : f_9421.call(null,k_9420,this$,old,new$));\n\nvar G__9422 = ((2) + i);\ni = G__9422;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s,v){\ncljs.core._write(writer,[\"#object[reagent.ratom.\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__9287 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__9288 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__9288);\n\ntry{return v;\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__9287);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\"]\");\n});\nreagent.ratom.rea_queue = null;\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RAtom\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__9301 = arguments.length;\nswitch (G__9301) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4757__auto__ = [];\nvar len__4736__auto___9432 = arguments.length;\nvar i__4737__auto___9433 = (0);\nwhile(true){\nif((i__4737__auto___9433 < len__4736__auto___9432)){\nargs_arr__4757__auto__.push((arguments[i__4737__auto___9433]));\n\nvar G__9434 = (i__4737__auto___9433 + (1));\ni__4737__auto___9433 = G__9434;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4758__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__9306){\nvar map__9307 = p__9306;\nvar map__9307__$1 = (((((!((map__9307 == null))))?(((((map__9307.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__9307.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9307):map__9307);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9307__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9307__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq9298){\nvar G__9299 = cljs.core.first(seq9298);\nvar seq9298__$1 = cljs.core.next(seq9298);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9299,seq9298__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__9312 = f;\nvar G__9313 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__9314 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __9439 = o.reagReactionCache;\nvar __9440__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__9439,k);\n(o.reagReactionCache = __9440__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__9312,G__9313,G__9314) : reagent.ratom.make_reaction.call(null,G__9312,G__9313,G__9314));\n})();\nvar v = cljs.core._deref(r__$1);\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),self__.f], null));\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__9321 = (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__9322 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__9323 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__9321,G__9322,G__9323) : reagent.ratom.make_reaction.call(null,G__9321,G__9322,G__9323));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___9446 = arguments.length;\nvar i__4737__auto___9447 = (0);\nwhile(true){\nif((i__4737__auto___9447 < len__4736__auto___9446)){\nargs__4742__auto__.push((arguments[i__4737__auto___9447]));\n\nvar G__9448 = (i__4737__auto___9447 + (1));\ni__4737__auto___9447 = G__9448;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq9324){\nvar G__9325 = cljs.core.first(seq9324);\nvar seq9324__$1 = cljs.core.next(seq9324);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9325,seq9324__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___9451 = arguments.length;\nvar i__4737__auto___9452 = (0);\nwhile(true){\nif((i__4737__auto___9452 < len__4736__auto___9451)){\nargs__4742__auto__.push((arguments[i__4737__auto___9452]));\n\nvar G__9453 = (i__4737__auto___9452 + (1));\ni__4737__auto___9452 = G__9453;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq9327){\nvar G__9328 = cljs.core.first(seq9327);\nvar seq9327__$1 = cljs.core.next(seq9327);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9328,seq9327__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__9331 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__9332 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__9332);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__9331);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RCursor\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__9338 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9338) : f.call(null,G__9338));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__9339 = a__$1._peek();\nvar G__9340 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9339,G__9340) : f.call(null,G__9339,G__9340));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__9341 = a__$1._peek();\nvar G__9342 = x;\nvar G__9343 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9341,G__9342,G__9343) : f.call(null,G__9341,G__9342,G__9343));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5739__auto__ = v.destroy;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5739__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5737__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5737__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_9461 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_9461(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_9463 = (function (this$,f){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4429__auto__.call(null,this$,f));\n} else {\nvar m__4426__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4426__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_9463(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_9464 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.run[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n});\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_9464(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__9356 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__9357 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__9357);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__9356);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__9359_9467 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__9360_9468 = null;\nvar count__9361_9469 = (0);\nvar i__9362_9470 = (0);\nwhile(true){\nif((i__9362_9470 < count__9361_9469)){\nvar w_9471 = chunk__9360_9468.cljs$core$IIndexed$_nth$arity$2(null,i__9362_9470);\ncljs.core._add_watch(w_9471,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__9472 = seq__9359_9467;\nvar G__9473 = chunk__9360_9468;\nvar G__9474 = count__9361_9469;\nvar G__9475 = (i__9362_9470 + (1));\nseq__9359_9467 = G__9472;\nchunk__9360_9468 = G__9473;\ncount__9361_9469 = G__9474;\ni__9362_9470 = G__9475;\ncontinue;\n} else {\nvar temp__5735__auto___9476 = cljs.core.seq(seq__9359_9467);\nif(temp__5735__auto___9476){\nvar seq__9359_9477__$1 = temp__5735__auto___9476;\nif(cljs.core.chunked_seq_QMARK_(seq__9359_9477__$1)){\nvar c__4556__auto___9478 = cljs.core.chunk_first(seq__9359_9477__$1);\nvar G__9479 = cljs.core.chunk_rest(seq__9359_9477__$1);\nvar G__9480 = c__4556__auto___9478;\nvar G__9481 = cljs.core.count(c__4556__auto___9478);\nvar G__9482 = (0);\nseq__9359_9467 = G__9479;\nchunk__9360_9468 = G__9480;\ncount__9361_9469 = G__9481;\ni__9362_9470 = G__9482;\ncontinue;\n} else {\nvar w_9483 = cljs.core.first(seq__9359_9477__$1);\ncljs.core._add_watch(w_9483,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__9484 = cljs.core.next(seq__9359_9477__$1);\nvar G__9485 = null;\nvar G__9486 = (0);\nvar G__9487 = (0);\nseq__9359_9467 = G__9484;\nchunk__9360_9468 = G__9485;\ncount__9361_9469 = G__9486;\ni__9362_9470 = G__9487;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__9365 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__9366 = null;\nvar count__9367 = (0);\nvar i__9368 = (0);\nwhile(true){\nif((i__9368 < count__9367)){\nvar w = chunk__9366.cljs$core$IIndexed$_nth$arity$2(null,i__9368);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__9488 = seq__9365;\nvar G__9489 = chunk__9366;\nvar G__9490 = count__9367;\nvar G__9491 = (i__9368 + (1));\nseq__9365 = G__9488;\nchunk__9366 = G__9489;\ncount__9367 = G__9490;\ni__9368 = G__9491;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__9365);\nif(temp__5735__auto__){\nvar seq__9365__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__9365__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__9365__$1);\nvar G__9492 = cljs.core.chunk_rest(seq__9365__$1);\nvar G__9493 = c__4556__auto__;\nvar G__9494 = cljs.core.count(c__4556__auto__);\nvar G__9495 = (0);\nseq__9365 = G__9492;\nchunk__9366 = G__9493;\ncount__9367 = G__9494;\ni__9368 = G__9495;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__9365__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__9497 = cljs.core.next(seq__9365__$1);\nvar G__9498 = null;\nvar G__9499 = (0);\nvar G__9500 = (0);\nseq__9365 = G__9497;\nchunk__9366 = G__9498;\ncount__9367 = G__9499;\ni__9368 = G__9500;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e9371){var e = e9371;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__9373){\nvar self__ = this;\nvar map__9374 = p__9373;\nvar map__9374__$1 = (((((!((map__9374 == null))))?(((((map__9374.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__9374.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9374):map__9374);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9374__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9374__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9374__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9374__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Reaction\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__9379_9503 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__9380_9504 = null;\nvar count__9381_9505 = (0);\nvar i__9382_9506 = (0);\nwhile(true){\nif((i__9382_9506 < count__9381_9505)){\nvar w_9507 = chunk__9380_9504.cljs$core$IIndexed$_nth$arity$2(null,i__9382_9506);\ncljs.core._remove_watch(w_9507,this$__$1);\n\n\nvar G__9508 = seq__9379_9503;\nvar G__9509 = chunk__9380_9504;\nvar G__9510 = count__9381_9505;\nvar G__9511 = (i__9382_9506 + (1));\nseq__9379_9503 = G__9508;\nchunk__9380_9504 = G__9509;\ncount__9381_9505 = G__9510;\ni__9382_9506 = G__9511;\ncontinue;\n} else {\nvar temp__5735__auto___9512 = cljs.core.seq(seq__9379_9503);\nif(temp__5735__auto___9512){\nvar seq__9379_9513__$1 = temp__5735__auto___9512;\nif(cljs.core.chunked_seq_QMARK_(seq__9379_9513__$1)){\nvar c__4556__auto___9517 = cljs.core.chunk_first(seq__9379_9513__$1);\nvar G__9518 = cljs.core.chunk_rest(seq__9379_9513__$1);\nvar G__9519 = c__4556__auto___9517;\nvar G__9520 = cljs.core.count(c__4556__auto___9517);\nvar G__9521 = (0);\nseq__9379_9503 = G__9518;\nchunk__9380_9504 = G__9519;\ncount__9381_9505 = G__9520;\ni__9382_9506 = G__9521;\ncontinue;\n} else {\nvar w_9522 = cljs.core.first(seq__9379_9513__$1);\ncljs.core._remove_watch(w_9522,this$__$1);\n\n\nvar G__9523 = cljs.core.next(seq__9379_9513__$1);\nvar G__9524 = null;\nvar G__9525 = (0);\nvar G__9526 = (0);\nseq__9379_9503 = G__9523;\nchunk__9380_9504 = G__9524;\ncount__9381_9505 = G__9525;\ni__9382_9506 = G__9526;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5739__auto__;\nvar n__4613__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4613__auto__)){\nvar fexpr__9384_9527 = (a[i]);\n(fexpr__9384_9527.cljs$core$IFn$_invoke$arity$1 ? fexpr__9384_9527.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__9384_9527.call(null,this$__$1));\n\nvar G__9528 = (i + (1));\ni = G__9528;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\nif((temp__5737__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5737__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__9387 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__9387) : f__$1.call(null,G__9387));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__9388 = a__$1._peek_at();\nvar G__9389 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__9388,G__9389) : f__$1.call(null,G__9388,G__9389));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__9390 = a__$1._peek_at();\nvar G__9391 = x;\nvar G__9392 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__9390,G__9391,G__9392) : f__$1.call(null,G__9390,G__9391,G__9392));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5739__auto___9532 = self__.caught;\nif((temp__5739__auto___9532 == null)){\n} else {\nvar e_9533 = temp__5739__auto___9532;\nthrow e_9533;\n}\n\nvar non_reactive_9534 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_9534){\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n} else {\n}\n\nif(((non_reactive_9534) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_9535 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_9535,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_9535,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__4613__auto___9539 = q.length;\nvar i_9540 = (0);\nwhile(true){\nif((i_9540 < n__4613__auto___9539)){\nvar r_9541 = (q[i_9540]);\nr_9541._queued_run();\n\nvar G__9542 = (i_9540 + (1));\ni_9540 = G__9542;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___9543 = arguments.length;\nvar i__4737__auto___9544 = (0);\nwhile(true){\nif((i__4737__auto___9544 < len__4736__auto___9543)){\nargs__4742__auto__.push((arguments[i__4737__auto___9544]));\n\nvar G__9545 = (i__4737__auto___9544 + (1));\ni__4737__auto___9544 = G__9545;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__9401){\nvar map__9402 = p__9401;\nvar map__9402__$1 = (((((!((map__9402 == null))))?(((((map__9402.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__9402.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9402):map__9402);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9402__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9402__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9402__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq9398){\nvar G__9399 = cljs.core.first(seq9398);\nvar seq9398__$1 = cljs.core.next(seq9398);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9399,seq9398__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrapper\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^D"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^K",["^L",[["~$&","^N"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^O","~$reagent.ratom/reaction","^Q","^R","^S",true],"~$run!",["^ ","^K",["^L",[["~$&","^N"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^O","~$reagent.ratom/run!","^Q","^R","^S",true]],"^O","^R","~:op","^Q","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^10","~$obj","~$goog.object","~$cljs.core","^13","~$goog","^14","^12","^12","~$reagent.impl.batching","^15","~$clojure.set","^16","~$util","^10","~$s","^16","~$batch","^15","^D","^D"],"~:seen",["^G",["~:require","~:require-macros"]],"~:uses",null,"^1;",["^ ","^R","^R","^D","^D","^13","^13"],"~:form",["^L",["~$ns","^R",["^L",["~:refer-clojure","~:exclude",["^H"]]],["^L",["^1;",["^R"]]],["^L",["^1:",["^10","~:as","^17"],["^D","~:refer-macros",["^C","^E"]],["^15","^1A","^18"],["^16","^1A","~$s"],["^12","^1A","^11"]]]]],"~:flags",["^ ","^1;",["^G",[]],"^1:",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^10","^D","^15","^16","^12"]],"^Q","^R","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1611615888694,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare flush!)\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [^clj r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s v]\n  (-write writer (str \"#object[reagent.ratom.\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] v) writer opts)\n  (-write writer \"]\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RAtom\" {:val (-deref a)}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track\" {:val (-deref a)\n                                                    :f f})))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RCursor\" {:val (-deref a)\n                                                      :path path}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Reaction\" {:val (-deref a)}))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (let [^Reaction r (aget q i)]\n            (._queued-run r)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [this ^clj other]\n    (and (instance? Wrapper other)\n         ;; If either of the wrappers have changed, equality\n         ;; cannot be relied on.\n         (not changed)\n         (not (.-changed other))\n         (= state (.-state other))\n         (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrapper\" {:val (-deref a)})))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.ratom/debug","reagent.ratom/generation","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","i","or__4126__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__9277","*ratom-context*-temp-val__9278","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__9279#","p2__9280#","p3__9281#","cljs.core/reduce-kv","G__9282","k","reagent.ratom/pr-atom","writer","opts","s","v","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__9287","*ratom-context*-temp-val__9288","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__9301","reagent.ratom/atom","args-arr__4757__auto__","len__4736__auto__","i__4737__auto__","argseq__4758__auto__","cljs.core/IndexedSeq","p__9306","map__9307","cljs.core/hash-map","cljs.core.get","seq9298","G__9299","cljs.core/first","cljs.core/next","self__4723__auto__","reagent.ratom/cached-reaction","destroy","m","cljs.core/-deref","G__9312","G__9313","G__9314","reagent.ratom/make-reaction","cljs.core/dec","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__9321","G__9322","G__9323","args__4742__auto__","argseq__4743__auto__","reagent.ratom/track","seq9324","G__9325","reagent.ratom/track!","seq9327","G__9328","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__9331","*ratom-context*-temp-val__9332","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__9338","G__9339","G__9340","G__9341","G__9342","G__9343","reagent.ratom/cursor","src","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","reagent$ratom$IDisposable$dispose_BANG_$dyn","x__4428__auto__","m__4429__auto__","reagent.ratom/dispose!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent$ratom$IRunnable$run$dyn","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__9373","map__9374","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","oldval","G__9387","G__9388","G__9389","G__9390","G__9391","G__9392","*ratom-context*-orig-val__9356","*ratom-context*-temp-val__9357","cljs.core/set","seq__9359","cljs.core/seq","chunk__9360","count__9361","i__9362","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__9365","chunk__9366","count__9367","i__9368","cljs.core/-remove-watch","e9371","e","check","on-set","on-dispose","no-cache","reagent.ratom/flush!","non-reactive","wg","seq__9379","chunk__9380","count__9381","i__9382","n__4613__auto__","fexpr__9384","q","reagent.impl.batching/ratom-flush","p__9401","map__9402","seq9398","G__9399","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^G",["~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$cljs.core/=","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$reagent.ratom/arr-len","~$cljs.core/apply","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.ratom/RCursor","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$reagent.ratom/arr-eq","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$cljs.core/-remove-watch","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$reagent.ratom/RAtom","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1G","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^14","^13","^D","^10"]]],["^1G","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","~$goog.dom.HtmlElement"]]],["^1G","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","~$goog.array","~$goog.asserts"]]],["^1G","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","~$goog.labs.userAgent.util","^12","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3X"]]],["^1G","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V"]]],["^1G","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^13","~$clojure.string","~$clojure.walk","^12","^D"]]],["^1G","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^13","^10","^D","^15","^16","^12"]]],["^1G","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V"]]],"~:SHADOW-TIMESTAMP",[1611523148000,1611523148000,1611523009000],["^1G","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V","~$goog.html.trustedtypes","^3[","^40","^41","^42"]]],["^1G","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","^3V","~$goog.html.SafeUrl","^41","^42","^3X"]]],["^1G","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^48","^3Z","~$goog.html.uncheckedconversions","^41","^3X"]]],["^1G","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^13"]]],["^1G","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1G","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","^3V","~$goog.dom.TagName","~$goog.dom.tags","^4<","^4=","~$goog.html.SafeStyleSheet","^48","^3Z","^47","^3[","^40","~$goog.labs.userAgent.browser","^12","^41","^42","^3X"]]],["^1G","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^12"]]],["^1G","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","^3V","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",[]]],["^1G","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","^12"]]],["^1G","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^13","^4G","~$goog.string.StringBuffer"]]],["^1G","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","~$goog.dom.safe","^4>","^41","^3X"]]],["^1G","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3X"]]],["^1G","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","^3V","^4:","~$goog.math"]]],["^1G","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V","^4;","^4<","^4=","^4C","^48","^3Z","^41","^3X"]]],["^1G","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14"]]],["^1G","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","~$goog.math.Long","~$goog.math.Integer","^4G","^12","^3U","~$goog.Uri","^4M"]]],["^1G","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V","^47","^41","^42"]]],["^1G","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^13"]]],["^1G","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","^3V","^4=","^12","^41","^42","^3X"]]],["^1G","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^46"]]],["^1G","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^13"]]],["^1G","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3U","^3V","^4G"]]],["^1G","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3P",["^ ","^3Q",null,"^3R",["^G",[]],"^3S",["^14","^3V","^42"]]]]],"~:clj-info",["^ ","jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1611523103000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1611523009000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1608999849000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1611522980000,"jar:file:/Users/piotrbrzezinski/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1608999849000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^G",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^B",["^ ","^C","^D","^E","^D"],"^F",["^G",["^H"]],"^I",["^ ","^J",["^ ","^K",["^L",[["^M","~$&","^N"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","^O","^P","^Q","^R","^S",true],"^T",["^ ","^K",["^L",[["~$&","^N"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^O","^U","^Q","^R","^S",true],"^V",["^ ","^K",["^L",[["~$&","^N"]]],"^W","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^O","^X","^Q","^R","^S",true]],"^O","^R","^Z",null,"^[",["^ ","^10","^10","^11","^12","^13","^13","^14","^14","^12","^12","^15","^15","^16","^16","^17","^10","~$s","^16","^18","^15","^D","^D"],"^19",["^G",["^1:","^1;"]],"^1<",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",107,"^8",8,"^9",107,"^:",15,"~:private",true,"^K",["^L",["~$quote",["^L",[["~$a","~$writer","~$opts","~$s","~$v"]]]]]],"^5H",true,"^O","^3M","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^L",[["~$a","^5J","^5K","~$s","~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^L",[null,null]],"^8",1,"~:variadic?",false,"^7",107,"~:ret-tag","~$any","^9",107,"~:max-fixed-arity",5,"~:fn-var",true,"^K",["^L",["^5I",["^L",[["~$a","^5J","^5K","~$s","~$v"]]]]]],"~$->RCursor",["^ ","^5G",null,"^5",["^ ","~:protocols",["^G",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2F","^39","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",248,"^9",248,"^K",["^L",["^5I",["^L",[["~$ratom","~$path","^T","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^39","^61"]],"^W","Positional factory function for reagent.ratom/RCursor."],"^5U",["^G",["^5V","^5W","^5X","^5Y","^5Z","^5[","^60","^2F","^39","^61"]],"^O","^3K","^6","reagent/ratom.cljs","^:",17,"^5L",["^L",[["^64","^65","^T","^66","^67"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^62","^63","^7",248,"^5P","^2B","^9",248,"^5R",5,"^5S",true,"^K",["^L",["^5I",["^L",[["^64","^65","^T","^66","^67"]]]]],"^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^39","^61"]],"^W","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",65,"^8",8,"^9",65,"^:",29,"^5H",true,"^K",["^L",["^5I",["^L",[["~$derefed"]]]]],"^W","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^5H",true,"^O","^2:","^6","reagent/ratom.cljs","^:",29,"^5L",["^L",[["^6:"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",65,"^5P",["^G",[null,"^5Q","~$clj-nil"]],"^9",65,"^5R",1,"^5S",true,"^K",["^L",["^5I",["^L",[["^6:"]]]]],"^W","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",117,"^8",8,"^9",117,"^:",19,"^5H",true,"^K",["^L",["^5I",["^L",[["~$r"]]]]]],"^5H",true,"^O","^2A","^6","reagent/ratom.cljs","^:",19,"^5L",["^L",[["~$r"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",117,"^5P","^5Q","^9",117,"^5R",1,"^5S",true,"^K",["^L",["^5I",["^L",[["~$r"]]]]]],"~$in-context",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",38,"^8",8,"^9",38,"^:",18,"^5H",true,"^K",["^L",["^5I",["^L",[["^11","~$f"]]]]],"^W","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^5H",true,"^O","^3H","^6","reagent/ratom.cljs","^:",18,"^5L",["^L",[["^11","~$f"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",38,"^9",38,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["^11","~$f"]]]]],"^W","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",228,"^8",7,"^9",228,"^:",17,"^K",["^L",["^5I",["^L",[["~$f","~$args"]]]]]],"^O","^3<","^6","reagent/ratom.cljs","^:",17,"^5L",["^L",[["~$f","^6?"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",228,"^5P","^38","^9",228,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f","^6?"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^5U",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^2F","~$cljs.core/IMeta","^39","^61","~$cljs.core/IWithMeta"]],"^O","^3B","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",127,"~:record",false,"^9",127,"~:tag","~$function","^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^6B","^39","^61","^6C"]]],"^H",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",172,"^8",7,"^9",172,"^:",11,"^K",["^L",["^5I",["^L",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^W","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^5O",true,"~:fixed-arity",1,"^5R",1,"^5L",[["~$x"]],"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6H",["^6I","^6J"]]]]],"^5N",["^L",[null,null]]]],"^O","^3D","^6","reagent/ratom.cljs","^:",11,"^6K",["^ ","^5O",true,"^6L",1,"^5R",1,"^5L",[["~$x"]],"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6H",["^6I","^6J"]]]]],"^5N",["^L",[null,null]]],"^5L",[["~$x"]],"^5M",null,"^6L",1,"^5N",["^L",[null,null]],"^8",1,"^5O",true,"~:methods",[["^ ","^6L",1,"^5O",false,"^6F","^3B"],["^ ","^6L",1,"^5O",true,"^6F","^3B"]],"^7",172,"^9",172,"^5R",1,"^5S",true,"^K",["^L",[["~$x"],["~$x","~$&",["^ ","^6H",["^6I","^6J"]]]]],"^W","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",91,"^8",8,"^9",91,"^:",16,"^5H",true,"^K",["^L",["^5I",["^L",[["~$this","~$old","~$new"]]]]]],"^5H",true,"^O","^2S","^6","reagent/ratom.cljs","^:",16,"^5L",["^L",[["^6O","^6P","^6Q"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",91,"^5P","^6;","^9",91,"^5R",3,"^5S",true,"^K",["^L",["^5I",["^L",[["^6O","^6P","^6Q"]]]]]],"~$->Reaction",["^ ","^5G",null,"^5",["^ ","^5U",["^G",["^5V","^5W","^5X","^5Y","^5Z","^5[","^60","^2F","^2R","^36","^39","^61"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^62","^63","^7",356,"^9",356,"^K",["^L",["^5I",["^L",[["~$f","^66","~$dirty?","~$nocache?","~$watching","^67","~$auto-run","~$caught"]]]]],"^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^39","^61"]],"^W","Positional factory function for reagent.ratom/Reaction."],"^5U",["^G",["^5V","^5W","^5X","^5Y","^5Z","^5[","^60","^2F","^2R","^36","^39","^61"]],"^O","^2O","^6","reagent/ratom.cljs","^:",18,"^5L",["^L",[["~$f","^66","^6S","^6T","^6U","^67","^6V","^6W"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^62","^63","^7",356,"^5P","^3A","^9",356,"^5R",8,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f","^66","^6S","^6T","^6U","^67","^6V","^6W"]]]]],"^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^39","^61"]],"^W","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",603,"^8",7,"^9",603,"^:",19,"^K",["^L",["^5I",["^L",[["~$value","~$callback-fn","^6?"]]]]]],"^O","^2C","^6","reagent/ratom.cljs","^:",19,"^5L",["^L",[["^6Y","^6Z","^6?"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",603,"^5P","^2K","^9",603,"^5R",3,"^5S",true,"^K",["^L",["^5I",["^L",[["^6Y","^6Z","^6?"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",125,"~:protocol-info",["^ ","^6M",["^ "]],"^9",125,"~:sigs",["^ "],"~:jsdoc",["^L",["@interface"]]],"^70",true,"^O","^2F","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",125,"^71",["^ ","^6M",["^ "]],"~:info",null,"^9",125,"^6F","^5Q","^72",["^ "],"~:impls",["^G",["^2B","^38","^3A","^3B"]],"^73",["^L",["@interface"]]],"~$track",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",238,"^8",7,"^9",238,"^:",12,"^K",["^L",["^5I",["^L",[["~$f","~$&","^6?"]]]]],"^6K",["^ ","^5O",true,"^6L",1,"^5R",1,"^5L",[["^L",["~$f","^6?"]]],"^K",["^L",[["~$f","~$&","^6?"]]],"^5N",["^L",[null]]]],"^O","^2G","^6","reagent/ratom.cljs","^:",12,"^6K",["^ ","^5O",true,"^6L",1,"^5R",1,"^5L",[["^L",["~$f","^6?"]]],"^K",["^L",[["~$f","~$&","^6?"]]],"^5N",["^L",[null]]],"^5L",[["^L",["~$f","^6?"]]],"^5M",null,"^6L",1,"^5N",["^L",[null]],"^8",1,"^5O",true,"^6M",[["^ ","^6L",1,"^5O",true,"^6F","^38"]],"^7",238,"^5P","^5Q","^9",238,"^5R",1,"^5S",true,"^K",["^L",[["~$f","~$&","^6?"]]]],"~$dispose!",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",338,"^8",4,"^9",338,"^:",12,"~:protocol","^36","^W",null,"^K",["^L",["^5I",["^L",[["^6O"]]]]]],"^78","^36","^O","^2N","^6","reagent/ratom.cljs","^:",12,"^5L",["^L",[["^6O"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",337,"^5P","^5Q","^9",338,"^5R",1,"^5S",true,"^K",["^L",["^5I",["^L",[["^6O"]]]]],"^W",null],"~$arr-eq",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",29,"^8",17,"^9",29,"^:",23,"^6F","~$boolean","^5H",true,"^K",["^L",["^5I",["^L",[["~$x","~$y"]]]]]],"^5H",true,"^O","^2X","^6","reagent/ratom.cljs","^:",23,"^5L",["^L",[["~$x","~$y"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",29,"^5P","^7:","^9",29,"^5R",2,"^6F","^7:","^5S",true,"^K",["^L",["^5I",["^L",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",344,"^8",8,"^9",344,"^:",30,"^5H",true,"^K",["^L",["^5I",["^L",[["^6O","~$sender","^6P","^6Q"]]]]]],"^5H",true,"^O","^2Y","^6","reagent/ratom.cljs","^:",30,"^5L",["^L",[["^6O","^7<","^6P","^6Q"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",344,"^5P","^5Q","^9",344,"^5R",4,"^5S",true,"^K",["^L",["^5I",["^L",[["^6O","^7<","^6P","^6Q"]]]]]],"~$run",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",342,"^8",4,"^9",342,"^:",7,"^78","^2R","^W",null,"^K",["^L",["^5I",["^L",[["^6O"]]]]]],"^78","^2R","^O","^1W","^6","reagent/ratom.cljs","^:",7,"^5L",["^L",[["^6O"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",341,"^5P","^5Q","^9",342,"^5R",1,"^5S",true,"^K",["^L",["^5I",["^L",[["^6O"]]]]],"^W",null],"~$add-on-dispose!",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",339,"^8",4,"^9",339,"^:",19,"^78","^36","^W",null,"^K",["^L",["^5I",["^L",[["^6O","~$f"]]]]]],"^78","^36","^O","^2U","^6","reagent/ratom.cljs","^:",19,"^5L",["^L",[["^6O","~$f"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",337,"^5P","^5Q","^9",339,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["^6O","~$f"]]]]],"^W",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",526,"^8",16,"^9",526,"^:",29,"^5H",true],"^5H",true,"^O","^2[","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",526,"^9",526,"^6F","^3A"],"~$make-track!",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",231,"^8",7,"^9",231,"^:",18,"^K",["^L",["^5I",["^L",[["~$f","^6?"]]]]]],"^O","^1V","^6","reagent/ratom.cljs","^:",18,"^5L",["^L",[["~$f","^6?"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",231,"^5P","^5Q","^9",231,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f","^6?"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",20,"^9",14,"^:",30,"^5H",true],"^5H",true,"^O","^1U","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",14,"^9",14,"^6F","~$number"],"~$run-in-reaction",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",529,"^8",7,"^9",529,"^:",22,"^K",["^L",["^5I",["^L",[["~$f","^11","~$key","^7=","^5K"]]]]],"^W","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^O","^31","^6","reagent/ratom.cljs","^:",22,"^5L",["^L",[["~$f","^11","^7D","^7=","^5K"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",529,"^5P","^5Q","^9",529,"^5R",5,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f","^11","^7D","^7=","^5K"]]]]],"^W","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^70",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",337,"^71",["^ ","^6M",["^ ","^77",[["^6O"]],"^7>",[["^6O","~$f"]]]],"^9",337,"^72",["^ ","~:dispose!",["^ ","^O","^77","^K",["^L",[["^6O"]]],"^W",null],"~:add-on-dispose!",["^ ","^O","^7>","^K",["^L",[["^6O","~$f"]]],"^W",null]],"^73",["^L",["@interface"]]],"^70",true,"^O","^36","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",337,"^71",["^ ","^6M",["^ ","^77",[["^6O"]],"^7>",[["^6O","~$f"]]]],"^74",null,"^9",337,"^6F","^5Q","^72",["^ ","^7F",["^ ","^O","^77","^K",["^L",[["^6O"]]],"^W",null],"^7G",["^ ","^O","^7>","^K",["^L",[["^6O","~$f"]]],"^W",null]],"^75",["^G",["^3A"]],"^73",["^L",["@interface"]]],"~$check-watches",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",76,"^8",8,"^9",76,"^:",21,"^5H",true,"^K",["^L",["^5I",["^L",[["^6P","^6Q"]]]]]],"^5H",true,"^O","^2<","^6","reagent/ratom.cljs","^:",21,"^5L",["^L",[["^6P","^6Q"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",76,"^9",76,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["^6P","^6Q"]]]]]],"~$with-let-destroy",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",325,"^8",7,"^9",325,"^:",23,"^K",["^L",["^5I",["^L",[["~$v"]]]]]],"^O","^2=","^6","reagent/ratom.cljs","^:",23,"^5L",["^L",[["~$v"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",325,"^5P",["^G",["^5Q","^6;"]],"^9",325,"^5R",1,"^5S",true,"^K",["^L",["^5I",["^L",[["~$v"]]]]]],"~$make-reaction",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",517,"^8",7,"^9",517,"^:",20,"^K",["^L",["^5I",["^L",[["~$f","~$&",["^ ","^6H",["^6V","~$on-set","~$on-dispose"]]]]]]],"^6K",["^ ","^5O",true,"^6L",1,"^5R",1,"^5L",[["^L",["~$f",["^ ","^6H",["^6V","^7K","^7L"]]]]],"^K",["^L",[["~$f","~$&",["^ ","^6H",["^6V","^7K","^7L"]]]]],"^5N",["^L",[null]]]],"^O","^2Q","^6","reagent/ratom.cljs","^:",20,"^6K",["^ ","^5O",true,"^6L",1,"^5R",1,"^5L",[["^L",["~$f",["^ ","^6H",["^6V","^7K","^7L"]]]]],"^K",["^L",[["~$f","~$&",["^ ","^6H",["^6V","^7K","^7L"]]]]],"^5N",["^L",[null]]],"^5L",[["^L",["~$f",["^ ","^6H",["^6V","^7K","^7L"]]]]],"^5M",null,"^6L",1,"^5N",["^L",[null]],"^8",1,"^5O",true,"^6M",[["^ ","^6L",1,"^5O",true,"^6F","^3A"]],"^7",517,"^5P","^5Q","^9",517,"^5R",1,"^5S",true,"^K",["^L",[["~$f","~$&",["^ ","^6H",["^6V","^7K","^7L"]]]]]],"~$add-w",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",81,"^8",8,"^9",81,"^:",13,"^5H",true,"^K",["^L",["^5I",["^L",[["^6O","^7D","~$f"]]]]]],"^5H",true,"^O","^3=","^6","reagent/ratom.cljs","^:",13,"^5L",["^L",[["^6O","^7D","~$f"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",81,"^9",81,"^5R",3,"^5S",true,"^K",["^L",["^5I",["^L",[["^6O","^7D","~$f"]]]]]],"~$Reaction",["^ ","^6A",8,"^5U",["^G",["^5V","^5W","^5X","^5Y","^5Z","^5[","^60","^2F","^2R","^36","^39","^61"]],"^O","^3A","^6","reagent/ratom.cljs","^:",18,"^6D",true,"^8",10,"^7",356,"^6E",false,"^9",356,"^6F","^6G","^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^39","^61"]]],"~$flush!",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",505,"^8",7,"^9",505,"^:",13,"^K",["^L",["^5I",["^L",[[]]]]]],"^O","^29","^6","reagent/ratom.cljs","^:",13,"^5L",["^L",[[]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",505,"^5P","^6;","^9",505,"^5R",0,"^5S",true,"^K",["^L",["^5I",["^L",[[]]]]]],"~$RCursor",["^ ","^6A",5,"^5U",["^G",["^5V","^5W","^5X","^5Y","^5Z","^5[","^60","^2F","^39","^61"]],"^O","^2B","^6","reagent/ratom.cljs","^:",17,"^6D",true,"^8",10,"^7",248,"^6E",false,"^9",248,"^6F","^6G","^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^39","^61"]]],"~$cached-reaction",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",8,"^9",182,"^:",23,"^5H",true,"^K",["^L",["^5I",["^L",[["~$f","~$o","~$k","^11","~$destroy"]]]]]],"^5H",true,"^O","^2J","^6","reagent/ratom.cljs","^:",23,"^5L",["^L",[["~$f","~$o","~$k","^11","^7R"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",182,"^5P","^5Q","^9",182,"^5R",5,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f","~$o","~$k","^11","^7R"]]]]]],"~$Track",["^ ","^6A",3,"^5U",["^G",["^5X","^5Y","^2F","^39","^61"]],"^O","^38","^6","reagent/ratom.cljs","^:",15,"^6D",true,"^8",10,"^7",206,"^6E",false,"^9",206,"^6F","^6G","^68",["^G",["^5X","^5Y","^39","^61"]]],"~$debug",["^ ","^O","^2@","^6","reagent/ratom.cljs","^7",13,"^8",1,"^9",13,"^:",24,"^6F","^7:","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",19,"^9",13,"^:",24,"^6F","^7:"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",20,"^9",15,"^:",28,"^5H",true],"^5H",true,"^O","^3@","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",15,"^9",15,"^6F","~$cljs.core/Atom"],"~$cursor",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",311,"^8",7,"^9",311,"^:",13,"^K",["^L",["^5I",["^L",[["~$src","^65"]]]]]],"^O","^3:","^6","reagent/ratom.cljs","^:",13,"^5L",["^L",[["^7X","^65"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",311,"^5P","^2B","^9",311,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["^7X","^65"]]]]]],"~$Wrapper",["^ ","^6A",4,"^5U",["^G",["^5V","^5W","^5X","^5[","^60","^39","^61"]],"^O","^2K","^6","reagent/ratom.cljs","^:",17,"^6D",true,"^8",10,"^7",556,"^6E",false,"^9",556,"^6F","^6G","^68",["^G",["^5V","^5W","^5X","^5[","^60","^39","^61"]]],"~$running",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",7,"^9",23,"^:",14,"^K",["^L",["^5I",["^L",[[]]]]]],"^O","^2P","^6","reagent/ratom.cljs","^:",14,"^5L",["^L",[[]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",23,"^5P","^7B","^9",23,"^5R",0,"^5S",true,"^K",["^L",["^5I",["^L",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^70",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",341,"^71",["^ ","^6M",["^ ","^7=",[["^6O"]]]],"^9",341,"^72",["^ ","~:run",["^ ","^O","^7=","^K",["^L",[["^6O"]]],"^W",null]],"^73",["^L",["@interface"]]],"^70",true,"^O","^2R","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",341,"^71",["^ ","^6M",["^ ","^7=",[["^6O"]]]],"^74",null,"^9",341,"^6F","^5Q","^72",["^ ","^80",["^ ","^O","^7=","^K",["^L",[["^6O"]]],"^W",null]],"^75",["^G",["^3A"]],"^73",["^L",["@interface"]]],"~$reactive?",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",17,"^8",16,"^9",17,"^:",25,"^6F","^7:","^K",["^L",["^5I",["^L",[[]]]]]],"^O","^3C","^6","reagent/ratom.cljs","^:",25,"^5L",["^L",[[]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",17,"^5P","^7:","^9",17,"^5R",0,"^6F","^7:","^5S",true,"^K",["^L",["^5I",["^L",[[]]]]]],"~$deref-capture",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",46,"^8",8,"^9",46,"^:",21,"^5H",true,"^K",["^L",["^5I",["^L",[["~$f","~$r"]]]]],"^W","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^5H",true,"^O","^3E","^6","reagent/ratom.cljs","^:",21,"^5L",["^L",[["~$f","~$r"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",46,"^5P","^5Q","^9",46,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f","~$r"]]]]],"^W","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",20,"^9",115,"^:",29,"^5H",true],"^5H",true,"^O","^2T","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",115,"^9",115,"^6F","^6;"],"~$with-let-values",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",329,"^8",7,"^9",329,"^:",22,"^K",["^L",["^5I",["^L",[["^7D"]]]]]],"^O","^3I","^6","reagent/ratom.cljs","^:",22,"^5L",["^L",[["^7D"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",329,"^5P",["^G",["^5Q","~$array"]],"^9",329,"^5R",1,"^5S",true,"^K",["^L",["^5I",["^L",[["^7D"]]]]]],"~$track!",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",242,"^8",7,"^9",242,"^:",13,"^K",["^L",["^5I",["^L",[["~$f","~$&","^6?"]]]]],"^6K",["^ ","^5O",true,"^6L",1,"^5R",1,"^5L",[["^L",["~$f","^6?"]]],"^K",["^L",[["~$f","~$&","^6?"]]],"^5N",["^L",[null]]]],"^O","^2M","^6","reagent/ratom.cljs","^:",13,"^6K",["^ ","^5O",true,"^6L",1,"^5R",1,"^5L",[["^L",["~$f","^6?"]]],"^K",["^L",[["~$f","~$&","^6?"]]],"^5N",["^L",[null]]],"^5L",[["^L",["~$f","^6?"]]],"^5M",null,"^6L",1,"^5N",["^L",[null]],"^8",1,"^5O",true,"^6M",[["^ ","^6L",1,"^5O",true,"^6F","^5Q"]],"^7",242,"^5P","^5Q","^9",242,"^5R",1,"^5S",true,"^K",["^L",[["~$f","~$&","^6?"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",35,"~:dynamic",true,"~:declared",true],"^O","^35","^6","reagent/ratom.cljs","^:",35,"^8",1,"^88",true,"^7",12,"^89",true,"^9",12,"^6F","^5Q"],"~$check-derefs",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",548,"^8",7,"^9",548,"^:",19,"^K",["^L",["^5I",["^L",[["~$f"]]]]]],"^O","^1T","^6","reagent/ratom.cljs","^:",19,"^5L",["^L",[["~$f"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",548,"^5P","~$cljs.core/IVector","^9",548,"^5R",1,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f"]]]]]],"~$remove-w",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",86,"^8",8,"^9",86,"^:",16,"^5H",true,"^K",["^L",["^5I",["^L",[["^6O","^7D"]]]]]],"^5H",true,"^O","^1X","^6","reagent/ratom.cljs","^:",16,"^5L",["^L",[["^6O","^7D"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",86,"^9",86,"^5R",2,"^5S",true,"^K",["^L",["^5I",["^L",[["^6O","^7D"]]]]]],"~$->Wrapper",["^ ","^5G",null,"^5",["^ ","^5U",["^G",["^5V","^5W","^5X","^5[","^60","^39","^61"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^62","^63","^7",556,"^9",556,"^K",["^L",["^5I",["^L",[["^66","~$callback","~$changed","^67"]]]]],"^68",["^G",["^5V","^5W","^5X","^5[","^60","^39","^61"]],"^W","Positional factory function for reagent.ratom/Wrapper."],"^5U",["^G",["^5V","^5W","^5X","^5[","^60","^39","^61"]],"^O","^37","^6","reagent/ratom.cljs","^:",17,"^5L",["^L",[["^66","^8>","^8?","^67"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^62","^63","^7",556,"^5P","^2K","^9",556,"^5R",4,"^5S",true,"^K",["^L",["^5I",["^L",[["^66","^8>","^8?","^67"]]]]],"^68",["^G",["^5V","^5W","^5X","^5[","^60","^39","^61"]],"^W","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^5G",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",16,"^9",26,"^:",23,"^6F","^7B","^5H",true,"^K",["^L",["^5I",["^L",[["~$x"]]]]]],"^5H",true,"^O","^26","^6","reagent/ratom.cljs","^:",23,"^5L",["^L",[["~$x"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^7",26,"^5P","^7B","^9",26,"^5R",1,"^6F","^7B","^5S",true,"^K",["^L",["^5I",["^L",[["~$x"]]]]]],"~$->RAtom",["^ ","^5G",null,"^5",["^ ","^5U",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^2F","^6B","^39","^61","^6C"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^62","^63","^7",127,"^9",127,"^K",["^L",["^5I",["^L",[["^66","^6I","^6J","^67"]]]]],"^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^6B","^39","^61","^6C"]],"^W","Positional factory function for reagent.ratom/RAtom."],"^5U",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^2F","^6B","^39","^61","^6C"]],"^O","^1Z","^6","reagent/ratom.cljs","^:",15,"^5L",["^L",[["^66","^6I","^6J","^67"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^62","^63","^7",127,"^5P","^3B","^9",127,"^5R",4,"^5S",true,"^K",["^L",["^5I",["^L",[["^66","^6I","^6J","^67"]]]]],"^68",["^G",["^5V","^5W","^5X","^5Y","^5[","^60","^6B","^39","^61","^6C"]],"^W","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^5G",null,"^5",["^ ","^5U",["^G",["^5X","^5Y","^2F","^39","^61"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^62","^63","^7",206,"^9",206,"^K",["^L",["^5I",["^L",[["~$f","^6?","^T"]]]]],"^68",["^G",["^5X","^5Y","^39","^61"]],"^W","Positional factory function for reagent.ratom/Track."],"^5U",["^G",["^5X","^5Y","^2F","^39","^61"]],"^O","^32","^6","reagent/ratom.cljs","^:",15,"^5L",["^L",[["~$f","^6?","^T"]]],"^5M",null,"^5N",["^L",[null,null]],"^8",1,"^5O",false,"^62","^63","^7",206,"^5P","^38","^9",206,"^5R",3,"^5S",true,"^K",["^L",["^5I",["^L",[["~$f","^6?","^T"]]]]],"^68",["^G",["^5X","^5Y","^39","^61"]],"^W","Positional factory function for reagent.ratom/Track."]],"^1;",["^ ","^R","^R","^D","^D","^13","^13"],"~:cljs.analyzer/constants",["^ ","^19",["^G",["~:path","~:on-set","^6W","^6U","^7:","^T","^8>","^5","~:else","^65","^6?","~:validator","^67","^6I","~:val","^6J","^6S","~:no-cache","^64","^66","~:auto-run","~:on-dispose","~:f","^6F","~:mutable","^8?","^6V","^6T","~$f"]],"~:order",["^8H","^66","^8L","^6I","^6J","^67","^5","^8G","^8F","^8K","~:f","~$f","^6?","^T","^8J","^8D","^64","^65","^8E","^8I","^6S","^6F","^7:","^6T","^6U","^6V","^6W","^8>","^8?"]],"^1C",["^ ","^1;",["^G",[]],"^1:",["^G",[]]],"^1D",["^ "],"^1E",["^14","^13","^10","^D","^15","^16","^12"]],"^Q","^R","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^3O",[["^8P","~:static-fns"],true,["^8P","~:shadow-tweaks"],null,["^8P","~:source-map-inline"],null,["^8P","~:elide-asserts"],true,["^8P","~:optimize-constants"],null,["^8P","^1J"],null,["^8P","~:external-config"],null,["^8P","~:tooling-config"],null,["^8P","~:emit-constants"],null,["^8P","~:load-tests"],false,["^8P","~:form-size-threshold"],null,["^8P","~:data-readers"],null,["^8P","~:infer-externs"],"~:auto",["^8P","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^8P","~:fn-invoke-direct"],null,["^8P","~:source-map"],null]]]